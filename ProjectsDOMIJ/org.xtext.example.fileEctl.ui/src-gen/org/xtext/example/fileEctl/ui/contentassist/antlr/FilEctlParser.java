/*
* generated by Xtext
*/
package org.xtext.example.fileEctl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.fileEctl.services.FilEctlGrammarAccess;

public class FilEctlParser extends AbstractContentAssistParser {
	
	@Inject
	private FilEctlGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.fileEctl.ui.contentassist.antlr.internal.InternalFilEctlParser createParser() {
		org.xtext.example.fileEctl.ui.contentassist.antlr.internal.InternalFilEctlParser result = new org.xtext.example.fileEctl.ui.contentassist.antlr.internal.InternalFilEctlParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTransformationAccess().getAlternatives(), "rule__Transformation__Alternatives");
					put(grammarAccess.getGenericStepAccess().getAlternatives(), "rule__GenericStep__Alternatives");
					put(grammarAccess.getFilterComponentAccess().getAlternatives(), "rule__FilterComponent__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getOperatorAccess().getAlternatives(), "rule__Operator__Alternatives");
					put(grammarAccess.getTimeUnitAccess().getAlternatives(), "rule__TimeUnit__Alternatives");
					put(grammarAccess.getTimeTypeAccess().getAlternatives(), "rule__TimeType__Alternatives");
					put(grammarAccess.getMemoryUnitAccess().getAlternatives(), "rule__MemoryUnit__Alternatives");
					put(grammarAccess.getCompositionTypeAccess().getAlternatives(), "rule__CompositionType__Alternatives");
					put(grammarAccess.getFileTypeAccess().getAlternatives(), "rule__FileType__Alternatives");
					put(grammarAccess.getStrategiesAccess().getAlternatives(), "rule__Strategies__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getModelAccess().getGroup_3(), "rule__Model__Group_3__0");
					put(grammarAccess.getModelAccess().getGroup_3_3(), "rule__Model__Group_3_3__0");
					put(grammarAccess.getModelAccess().getGroup_4(), "rule__Model__Group_4__0");
					put(grammarAccess.getModelAccess().getGroup_4_3(), "rule__Model__Group_4_3__0");
					put(grammarAccess.getModelAccess().getGroup_5(), "rule__Model__Group_5__0");
					put(grammarAccess.getModelAccess().getGroup_5_3(), "rule__Model__Group_5_3__0");
					put(grammarAccess.getPathVariableAccess().getGroup(), "rule__PathVariable__Group__0");
					put(grammarAccess.getSelectionVariableAccess().getGroup(), "rule__SelectionVariable__Group__0");
					put(grammarAccess.getTransformation_ImplAccess().getGroup(), "rule__Transformation_Impl__Group__0");
					put(grammarAccess.getPathAccess().getGroup(), "rule__Path__Group__0");
					put(grammarAccess.getPathAccess().getGroup_2(), "rule__Path__Group_2__0");
					put(grammarAccess.getPathAccess().getGroup_6(), "rule__Path__Group_6__0");
					put(grammarAccess.getConcreteStepAccess().getGroup(), "rule__ConcreteStep__Group__0");
					put(grammarAccess.getVariableStepAccess().getGroup(), "rule__VariableStep__Group__0");
					put(grammarAccess.getParametrizedStepAccess().getGroup(), "rule__ParametrizedStep__Group__0");
					put(grammarAccess.getSelectionAccess().getGroup(), "rule__Selection__Group__0");
					put(grammarAccess.getSelectionAccess().getGroup_2(), "rule__Selection__Group_2__0");
					put(grammarAccess.getSelectionAccess().getGroup_2_3(), "rule__Selection__Group_2_3__0");
					put(grammarAccess.getFilterComponent_ImplAccess().getGroup(), "rule__FilterComponent_Impl__Group__0");
					put(grammarAccess.getFilterLeaf_ImplAccess().getGroup(), "rule__FilterLeaf_Impl__Group__0");
					put(grammarAccess.getFilterLeaf_ImplAccess().getGroup_3(), "rule__FilterLeaf_Impl__Group_3__0");
					put(grammarAccess.getOnNameAccess().getGroup(), "rule__OnName__Group__0");
					put(grammarAccess.getOnNameAccess().getGroup_4(), "rule__OnName__Group_4__0");
					put(grammarAccess.getOnExtensionAccess().getGroup(), "rule__OnExtension__Group__0");
					put(grammarAccess.getOnExtensionAccess().getGroup_3(), "rule__OnExtension__Group_3__0");
					put(grammarAccess.getOnExtensionAccess().getGroup_4(), "rule__OnExtension__Group_4__0");
					put(grammarAccess.getOnExtensionAccess().getGroup_4_3(), "rule__OnExtension__Group_4_3__0");
					put(grammarAccess.getOnMeasure_ImplAccess().getGroup(), "rule__OnMeasure_Impl__Group__0");
					put(grammarAccess.getOnMeasure_ImplAccess().getGroup_2(), "rule__OnMeasure_Impl__Group_2__0");
					put(grammarAccess.getOnTimeAccess().getGroup(), "rule__OnTime__Group__0");
					put(grammarAccess.getOnTimeAccess().getGroup_2(), "rule__OnTime__Group_2__0");
					put(grammarAccess.getOnAttributesAccess().getGroup(), "rule__OnAttributes__Group__0");
					put(grammarAccess.getOnAttributesAccess().getGroup_3(), "rule__OnAttributes__Group_3__0");
					put(grammarAccess.getOnTagsAccess().getGroup(), "rule__OnTags__Group__0");
					put(grammarAccess.getOnTagsAccess().getGroup_3(), "rule__OnTags__Group_3__0");
					put(grammarAccess.getOnTagsAccess().getGroup_4(), "rule__OnTags__Group_4__0");
					put(grammarAccess.getOnTagsAccess().getGroup_4_3(), "rule__OnTags__Group_4_3__0");
					put(grammarAccess.getOnSizeAccess().getGroup(), "rule__OnSize__Group__0");
					put(grammarAccess.getOnSizeAccess().getGroup_2(), "rule__OnSize__Group_2__0");
					put(grammarAccess.getOnBasic_ImplAccess().getGroup(), "rule__OnBasic_Impl__Group__0");
					put(grammarAccess.getOnBasic_ImplAccess().getGroup_3(), "rule__OnBasic_Impl__Group_3__0");
					put(grammarAccess.getOnCustom_ImplAccess().getGroup(), "rule__OnCustom_Impl__Group__0");
					put(grammarAccess.getOnCustom_ImplAccess().getGroup_3(), "rule__OnCustom_Impl__Group_3__0");
					put(grammarAccess.getFilterContainerAccess().getGroup(), "rule__FilterContainer__Group__0");
					put(grammarAccess.getFilterContainerAccess().getGroup_2(), "rule__FilterContainer__Group_2__0");
					put(grammarAccess.getFilterContainerAccess().getGroup_6(), "rule__FilterContainer__Group_6__0");
					put(grammarAccess.getIsEmptyAccess().getGroup(), "rule__IsEmpty__Group__0");
					put(grammarAccess.getIsEmptyAccess().getGroup_3(), "rule__IsEmpty__Group_3__0");
					put(grammarAccess.getOnTypeAccess().getGroup(), "rule__OnType__Group__0");
					put(grammarAccess.getOnTypeAccess().getGroup_2(), "rule__OnType__Group_2__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getCreating_ImplAccess().getGroup(), "rule__Creating_Impl__Group__0");
					put(grammarAccess.getCreating_ImplAccess().getGroup_2(), "rule__Creating_Impl__Group_2__0");
					put(grammarAccess.getCopyAccess().getGroup(), "rule__Copy__Group__0");
					put(grammarAccess.getCopyAccess().getGroup_2(), "rule__Copy__Group_2__0");
					put(grammarAccess.getMoveAccess().getGroup(), "rule__Move__Group__0");
					put(grammarAccess.getMoveAccess().getGroup_2(), "rule__Move__Group_2__0");
					put(grammarAccess.getDeleteAccess().getGroup(), "rule__Delete__Group__0");
					put(grammarAccess.getModelAccess().getPath_variablesAssignment_3_2(), "rule__Model__Path_variablesAssignment_3_2");
					put(grammarAccess.getModelAccess().getPath_variablesAssignment_3_3_1(), "rule__Model__Path_variablesAssignment_3_3_1");
					put(grammarAccess.getModelAccess().getSelection_variablesAssignment_4_2(), "rule__Model__Selection_variablesAssignment_4_2");
					put(grammarAccess.getModelAccess().getSelection_variablesAssignment_4_3_1(), "rule__Model__Selection_variablesAssignment_4_3_1");
					put(grammarAccess.getModelAccess().getTransformationsAssignment_5_2(), "rule__Model__TransformationsAssignment_5_2");
					put(grammarAccess.getModelAccess().getTransformationsAssignment_5_3_1(), "rule__Model__TransformationsAssignment_5_3_1");
					put(grammarAccess.getPathVariableAccess().getNameAssignment_1(), "rule__PathVariable__NameAssignment_1");
					put(grammarAccess.getPathVariableAccess().getValueAssignment_4(), "rule__PathVariable__ValueAssignment_4");
					put(grammarAccess.getSelectionVariableAccess().getNameAssignment_1(), "rule__SelectionVariable__NameAssignment_1");
					put(grammarAccess.getSelectionVariableAccess().getValueAssignment_4(), "rule__SelectionVariable__ValueAssignment_4");
					put(grammarAccess.getTransformation_ImplAccess().getSourceAssignment_3(), "rule__Transformation_Impl__SourceAssignment_3");
					put(grammarAccess.getPathAccess().getAbsoluteAssignment_2_1(), "rule__Path__AbsoluteAssignment_2_1");
					put(grammarAccess.getPathAccess().getStepsAssignment_5(), "rule__Path__StepsAssignment_5");
					put(grammarAccess.getPathAccess().getStepsAssignment_6_1(), "rule__Path__StepsAssignment_6_1");
					put(grammarAccess.getConcreteStepAccess().getValueAssignment_3(), "rule__ConcreteStep__ValueAssignment_3");
					put(grammarAccess.getVariableStepAccess().getValueAssignment_3(), "rule__VariableStep__ValueAssignment_3");
					put(grammarAccess.getParametrizedStepAccess().getNameAssignment_2(), "rule__ParametrizedStep__NameAssignment_2");
					put(grammarAccess.getSelectionAccess().getWhereAssignment_2_2(), "rule__Selection__WhereAssignment_2_2");
					put(grammarAccess.getSelectionAccess().getWhereAssignment_2_3_1(), "rule__Selection__WhereAssignment_2_3_1");
					put(grammarAccess.getSelectionAccess().getFromAssignment_4(), "rule__Selection__FromAssignment_4");
					put(grammarAccess.getFilterLeaf_ImplAccess().getTrueFalseSearchAssignment_3_1(), "rule__FilterLeaf_Impl__TrueFalseSearchAssignment_3_1");
					put(grammarAccess.getOnNameAccess().getNameAssignment_2(), "rule__OnName__NameAssignment_2");
					put(grammarAccess.getOnNameAccess().getTrueFalseSearchAssignment_4_1(), "rule__OnName__TrueFalseSearchAssignment_4_1");
					put(grammarAccess.getOnExtensionAccess().getTrueFalseSearchAssignment_3_1(), "rule__OnExtension__TrueFalseSearchAssignment_3_1");
					put(grammarAccess.getOnExtensionAccess().getExtensionsAssignment_4_2(), "rule__OnExtension__ExtensionsAssignment_4_2");
					put(grammarAccess.getOnExtensionAccess().getExtensionsAssignment_4_3_1(), "rule__OnExtension__ExtensionsAssignment_4_3_1");
					put(grammarAccess.getOnMeasure_ImplAccess().getTrueFalseSearchAssignment_2_1(), "rule__OnMeasure_Impl__TrueFalseSearchAssignment_2_1");
					put(grammarAccess.getOnMeasure_ImplAccess().getOperatorAssignment_4(), "rule__OnMeasure_Impl__OperatorAssignment_4");
					put(grammarAccess.getOnMeasure_ImplAccess().getTresholdAssignment_6(), "rule__OnMeasure_Impl__TresholdAssignment_6");
					put(grammarAccess.getOnTimeAccess().getTrueFalseSearchAssignment_2_1(), "rule__OnTime__TrueFalseSearchAssignment_2_1");
					put(grammarAccess.getOnTimeAccess().getOperatorAssignment_4(), "rule__OnTime__OperatorAssignment_4");
					put(grammarAccess.getOnTimeAccess().getTresholdAssignment_6(), "rule__OnTime__TresholdAssignment_6");
					put(grammarAccess.getOnTimeAccess().getUnitAssignment_8(), "rule__OnTime__UnitAssignment_8");
					put(grammarAccess.getOnTimeAccess().getTimeOfAssignment_10(), "rule__OnTime__TimeOfAssignment_10");
					put(grammarAccess.getOnAttributesAccess().getNameAssignment_1(), "rule__OnAttributes__NameAssignment_1");
					put(grammarAccess.getOnAttributesAccess().getTrueFalseSearchAssignment_3_1(), "rule__OnAttributes__TrueFalseSearchAssignment_3_1");
					put(grammarAccess.getOnAttributesAccess().getValueAssignment_5(), "rule__OnAttributes__ValueAssignment_5");
					put(grammarAccess.getOnTagsAccess().getOnlyAssignment_0(), "rule__OnTags__OnlyAssignment_0");
					put(grammarAccess.getOnTagsAccess().getTrueFalseSearchAssignment_3_1(), "rule__OnTags__TrueFalseSearchAssignment_3_1");
					put(grammarAccess.getOnTagsAccess().getTagsAssignment_4_2(), "rule__OnTags__TagsAssignment_4_2");
					put(grammarAccess.getOnTagsAccess().getTagsAssignment_4_3_1(), "rule__OnTags__TagsAssignment_4_3_1");
					put(grammarAccess.getOnTagsAccess().getTresholdAssignment_6(), "rule__OnTags__TresholdAssignment_6");
					put(grammarAccess.getOnSizeAccess().getTrueFalseSearchAssignment_2_1(), "rule__OnSize__TrueFalseSearchAssignment_2_1");
					put(grammarAccess.getOnSizeAccess().getOperatorAssignment_4(), "rule__OnSize__OperatorAssignment_4");
					put(grammarAccess.getOnSizeAccess().getTresholdAssignment_6(), "rule__OnSize__TresholdAssignment_6");
					put(grammarAccess.getOnSizeAccess().getUnitAssignment_8(), "rule__OnSize__UnitAssignment_8");
					put(grammarAccess.getOnBasic_ImplAccess().getTrueFalseSearchAssignment_3_1(), "rule__OnBasic_Impl__TrueFalseSearchAssignment_3_1");
					put(grammarAccess.getOnCustom_ImplAccess().getTrueFalseSearchAssignment_3_1(), "rule__OnCustom_Impl__TrueFalseSearchAssignment_3_1");
					put(grammarAccess.getFilterContainerAccess().getCompositionTypeAssignment_2_1(), "rule__FilterContainer__CompositionTypeAssignment_2_1");
					put(grammarAccess.getFilterContainerAccess().getSegmentsAssignment_5(), "rule__FilterContainer__SegmentsAssignment_5");
					put(grammarAccess.getFilterContainerAccess().getSegmentsAssignment_6_1(), "rule__FilterContainer__SegmentsAssignment_6_1");
					put(grammarAccess.getIsEmptyAccess().getTrueFalseSearchAssignment_3_1(), "rule__IsEmpty__TrueFalseSearchAssignment_3_1");
					put(grammarAccess.getOnTypeAccess().getTrueFalseSearchAssignment_2_1(), "rule__OnType__TrueFalseSearchAssignment_2_1");
					put(grammarAccess.getOnTypeAccess().getTypeAssignment_4(), "rule__OnType__TypeAssignment_4");
					put(grammarAccess.getCreating_ImplAccess().getStrategyAssignment_2_1(), "rule__Creating_Impl__StrategyAssignment_2_1");
					put(grammarAccess.getCreating_ImplAccess().getSourceAssignment_4(), "rule__Creating_Impl__SourceAssignment_4");
					put(grammarAccess.getCreating_ImplAccess().getDestinationAssignment_6(), "rule__Creating_Impl__DestinationAssignment_6");
					put(grammarAccess.getCopyAccess().getStrategyAssignment_2_1(), "rule__Copy__StrategyAssignment_2_1");
					put(grammarAccess.getCopyAccess().getSourceAssignment_4(), "rule__Copy__SourceAssignment_4");
					put(grammarAccess.getCopyAccess().getDestinationAssignment_6(), "rule__Copy__DestinationAssignment_6");
					put(grammarAccess.getMoveAccess().getStrategyAssignment_2_1(), "rule__Move__StrategyAssignment_2_1");
					put(grammarAccess.getMoveAccess().getSourceAssignment_4(), "rule__Move__SourceAssignment_4");
					put(grammarAccess.getMoveAccess().getDestinationAssignment_6(), "rule__Move__DestinationAssignment_6");
					put(grammarAccess.getDeleteAccess().getSourceAssignment_3(), "rule__Delete__SourceAssignment_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.fileEctl.ui.contentassist.antlr.internal.InternalFilEctlParser typedParser = (org.xtext.example.fileEctl.ui.contentassist.antlr.internal.InternalFilEctlParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public FilEctlGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(FilEctlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
