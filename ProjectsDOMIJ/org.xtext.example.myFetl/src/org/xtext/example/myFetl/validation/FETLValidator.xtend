/*
 * generated by Xtext
 */
package org.xtext.example.myFetl.validation

import FileTransferPackage.Path
import org.eclipse.xtext.validation.Check
import org.eclipse.xtext.xbase.formatting.IntegerKey
import FileTransferPackage.ConcreteStep
import FileTransferPackage.FileTransferPackagePackage
import org.eclipse.emf.codegen.ecore.genmodel.impl.Literals

//import org.eclipse.xtext.validation.Check

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class FETLValidator extends AbstractFETLValidator {

//  public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					MyDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}

	@Check
	def onlyFirstStepCanBeAbsolute(Path path){
		val i = 0BD;
		for(step: path.steps){
			
			if(path.steps.get(0)!=step  && step instanceof ConcreteStep){
				val cstep = step as ConcreteStep;
				if (cstep.absolute){
					//warning("",FileTransferPackagePackage.Literals.CONCRETE_STEP__ABSOLUTE);
					error('Only first concrete step can be absolute.',path,FileTransferPackagePackage.Literals.PATH__STEPS);
				} 
				
			}
			
		}
	}
}
