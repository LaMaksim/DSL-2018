/*
* generated by Xtext
*/
package org.xtext.example.fileEctl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class FilEctlGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPath_variablesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cPath_variablesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cPath_variablesPathVariableParserRuleCall_3_2_0 = (RuleCall)cPath_variablesAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cPath_variablesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cPath_variablesPathVariableParserRuleCall_3_3_1_0 = (RuleCall)cPath_variablesAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSelection_variablesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cSelection_variablesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cSelection_variablesSelectionVariableParserRuleCall_4_2_0 = (RuleCall)cSelection_variablesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cSelection_variablesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cSelection_variablesSelectionVariableParserRuleCall_4_3_1_0 = (RuleCall)cSelection_variablesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTransformationsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cTransformationsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cTransformationsTransformationParserRuleCall_5_2_0 = (RuleCall)cTransformationsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cTransformationsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cTransformationsTransformationParserRuleCall_5_3_1_0 = (RuleCall)cTransformationsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Model:
		//	{Model} "Model" "{" ("path_variables" "{" path_variables+=PathVariable ("," path_variables+=PathVariable)* "}")?
		//	("selection_variables" "{" selection_variables+=SelectionVariable ("," selection_variables+=SelectionVariable)* "}")?
		//	("transformations" "{" transformations+=Transformation ("," transformations+=Transformation)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{Model} "Model" "{" ("path_variables" "{" path_variables+=PathVariable ("," path_variables+=PathVariable)* "}")?
		//("selection_variables" "{" selection_variables+=SelectionVariable ("," selection_variables+=SelectionVariable)* "}")?
		//("transformations" "{" transformations+=Transformation ("," transformations+=Transformation)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{Model}
		public Action getModelAction_0() { return cModelAction_0; }

		//"Model"
		public Keyword getModelKeyword_1() { return cModelKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("path_variables" "{" path_variables+=PathVariable ("," path_variables+=PathVariable)* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"path_variables"
		public Keyword getPath_variablesKeyword_3_0() { return cPath_variablesKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//path_variables+=PathVariable
		public Assignment getPath_variablesAssignment_3_2() { return cPath_variablesAssignment_3_2; }

		//PathVariable
		public RuleCall getPath_variablesPathVariableParserRuleCall_3_2_0() { return cPath_variablesPathVariableParserRuleCall_3_2_0; }

		//("," path_variables+=PathVariable)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//path_variables+=PathVariable
		public Assignment getPath_variablesAssignment_3_3_1() { return cPath_variablesAssignment_3_3_1; }

		//PathVariable
		public RuleCall getPath_variablesPathVariableParserRuleCall_3_3_1_0() { return cPath_variablesPathVariableParserRuleCall_3_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }

		//("selection_variables" "{" selection_variables+=SelectionVariable ("," selection_variables+=SelectionVariable)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"selection_variables"
		public Keyword getSelection_variablesKeyword_4_0() { return cSelection_variablesKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//selection_variables+=SelectionVariable
		public Assignment getSelection_variablesAssignment_4_2() { return cSelection_variablesAssignment_4_2; }

		//SelectionVariable
		public RuleCall getSelection_variablesSelectionVariableParserRuleCall_4_2_0() { return cSelection_variablesSelectionVariableParserRuleCall_4_2_0; }

		//("," selection_variables+=SelectionVariable)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//selection_variables+=SelectionVariable
		public Assignment getSelection_variablesAssignment_4_3_1() { return cSelection_variablesAssignment_4_3_1; }

		//SelectionVariable
		public RuleCall getSelection_variablesSelectionVariableParserRuleCall_4_3_1_0() { return cSelection_variablesSelectionVariableParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//("transformations" "{" transformations+=Transformation ("," transformations+=Transformation)* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"transformations"
		public Keyword getTransformationsKeyword_5_0() { return cTransformationsKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//transformations+=Transformation
		public Assignment getTransformationsAssignment_5_2() { return cTransformationsAssignment_5_2; }

		//Transformation
		public RuleCall getTransformationsTransformationParserRuleCall_5_2_0() { return cTransformationsTransformationParserRuleCall_5_2_0; }

		//("," transformations+=Transformation)*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//transformations+=Transformation
		public Assignment getTransformationsAssignment_5_3_1() { return cTransformationsAssignment_5_3_1; }

		//Transformation
		public RuleCall getTransformationsTransformationParserRuleCall_5_3_1_0() { return cTransformationsTransformationParserRuleCall_5_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class TransformationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transformation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTransformation_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCreating_ImplParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCopyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMoveParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDeleteParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Transformation:
		//	Transformation_Impl | Creating_Impl | Copy | Move | Delete;
		public ParserRule getRule() { return rule; }

		//Transformation_Impl | Creating_Impl | Copy | Move | Delete
		public Alternatives getAlternatives() { return cAlternatives; }

		//Transformation_Impl
		public RuleCall getTransformation_ImplParserRuleCall_0() { return cTransformation_ImplParserRuleCall_0; }

		//Creating_Impl
		public RuleCall getCreating_ImplParserRuleCall_1() { return cCreating_ImplParserRuleCall_1; }

		//Copy
		public RuleCall getCopyParserRuleCall_2() { return cCopyParserRuleCall_2; }

		//Move
		public RuleCall getMoveParserRuleCall_3() { return cMoveParserRuleCall_3; }

		//Delete
		public RuleCall getDeleteParserRuleCall_4() { return cDeleteParserRuleCall_4; }
	}

	public class GenericStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GenericStep");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConcreteStepParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVariableStepParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cParametrizedStepParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//GenericStep:
		//	ConcreteStep | VariableStep | ParametrizedStep;
		public ParserRule getRule() { return rule; }

		//ConcreteStep | VariableStep | ParametrizedStep
		public Alternatives getAlternatives() { return cAlternatives; }

		//ConcreteStep
		public RuleCall getConcreteStepParserRuleCall_0() { return cConcreteStepParserRuleCall_0; }

		//VariableStep
		public RuleCall getVariableStepParserRuleCall_1() { return cVariableStepParserRuleCall_1; }

		//ParametrizedStep
		public RuleCall getParametrizedStepParserRuleCall_2() { return cParametrizedStepParserRuleCall_2; }
	}

	public class FilterComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilterComponent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFilterComponent_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFilterLeaf_ImplParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cOnNameParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOnExtensionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cOnMeasure_ImplParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cOnTimeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cOnAttributesParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cOnTagsParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cOnSizeParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cOnBasic_ImplParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cOnCustom_ImplParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cFilterContainerParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cIsEmptyParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cOnTypeParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		
		//FilterComponent:
		//	FilterComponent_Impl | FilterLeaf_Impl | OnName | OnExtension | OnMeasure_Impl | OnTime | OnAttributes | OnTags |
		//	OnSize | OnBasic_Impl | OnCustom_Impl | FilterContainer | IsEmpty | OnType;
		public ParserRule getRule() { return rule; }

		//FilterComponent_Impl | FilterLeaf_Impl | OnName | OnExtension | OnMeasure_Impl | OnTime | OnAttributes | OnTags | OnSize
		//| OnBasic_Impl | OnCustom_Impl | FilterContainer | IsEmpty | OnType
		public Alternatives getAlternatives() { return cAlternatives; }

		//FilterComponent_Impl
		public RuleCall getFilterComponent_ImplParserRuleCall_0() { return cFilterComponent_ImplParserRuleCall_0; }

		//FilterLeaf_Impl
		public RuleCall getFilterLeaf_ImplParserRuleCall_1() { return cFilterLeaf_ImplParserRuleCall_1; }

		//OnName
		public RuleCall getOnNameParserRuleCall_2() { return cOnNameParserRuleCall_2; }

		//OnExtension
		public RuleCall getOnExtensionParserRuleCall_3() { return cOnExtensionParserRuleCall_3; }

		//OnMeasure_Impl
		public RuleCall getOnMeasure_ImplParserRuleCall_4() { return cOnMeasure_ImplParserRuleCall_4; }

		//OnTime
		public RuleCall getOnTimeParserRuleCall_5() { return cOnTimeParserRuleCall_5; }

		//OnAttributes
		public RuleCall getOnAttributesParserRuleCall_6() { return cOnAttributesParserRuleCall_6; }

		//OnTags
		public RuleCall getOnTagsParserRuleCall_7() { return cOnTagsParserRuleCall_7; }

		//OnSize
		public RuleCall getOnSizeParserRuleCall_8() { return cOnSizeParserRuleCall_8; }

		//OnBasic_Impl
		public RuleCall getOnBasic_ImplParserRuleCall_9() { return cOnBasic_ImplParserRuleCall_9; }

		//OnCustom_Impl
		public RuleCall getOnCustom_ImplParserRuleCall_10() { return cOnCustom_ImplParserRuleCall_10; }

		//FilterContainer
		public RuleCall getFilterContainerParserRuleCall_11() { return cFilterContainerParserRuleCall_11; }

		//IsEmpty
		public RuleCall getIsEmptyParserRuleCall_12() { return cIsEmptyParserRuleCall_12; }

		//OnType
		public RuleCall getOnTypeParserRuleCall_13() { return cOnTypeParserRuleCall_13; }
	}

	public class PathVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PathVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPathVariableKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cValueKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValuePathParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PathVariable:
		//	"PathVariable" name=EString "{" "value" value=Path "}";
		public ParserRule getRule() { return rule; }

		//"PathVariable" name=EString "{" "value" value=Path "}"
		public Group getGroup() { return cGroup; }

		//"PathVariable"
		public Keyword getPathVariableKeyword_0() { return cPathVariableKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"value"
		public Keyword getValueKeyword_3() { return cValueKeyword_3; }

		//value=Path
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//Path
		public RuleCall getValuePathParserRuleCall_4_0() { return cValuePathParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class SelectionVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SelectionVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSelectionVariableKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cValueKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueSelectionParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SelectionVariable:
		//	"SelectionVariable" name=EString "{" "value" value=Selection "}";
		public ParserRule getRule() { return rule; }

		//"SelectionVariable" name=EString "{" "value" value=Selection "}"
		public Group getGroup() { return cGroup; }

		//"SelectionVariable"
		public Keyword getSelectionVariableKeyword_0() { return cSelectionVariableKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"value"
		public Keyword getValueKeyword_3() { return cValueKeyword_3; }

		//value=Selection
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//Selection
		public RuleCall getValueSelectionParserRuleCall_4_0() { return cValueSelectionParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class Transformation_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transformation_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransformationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSourceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSourceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSourceSelectionVariableCrossReference_3_0 = (CrossReference)cSourceAssignment_3.eContents().get(0);
		private final RuleCall cSourceSelectionVariableEStringParserRuleCall_3_0_1 = (RuleCall)cSourceSelectionVariableCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Transformation_Impl returns Transformation:
		//	"Transformation" "{" "source" source=[SelectionVariable|EString] "}";
		public ParserRule getRule() { return rule; }

		//"Transformation" "{" "source" source=[SelectionVariable|EString] "}"
		public Group getGroup() { return cGroup; }

		//"Transformation"
		public Keyword getTransformationKeyword_0() { return cTransformationKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"source"
		public Keyword getSourceKeyword_2() { return cSourceKeyword_2; }

		//source=[SelectionVariable|EString]
		public Assignment getSourceAssignment_3() { return cSourceAssignment_3; }

		//[SelectionVariable|EString]
		public CrossReference getSourceSelectionVariableCrossReference_3_0() { return cSourceSelectionVariableCrossReference_3_0; }

		//EString
		public RuleCall getSourceSelectionVariableEStringParserRuleCall_3_0_1() { return cSourceSelectionVariableEStringParserRuleCall_3_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class PathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Path");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPathKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAbsoluteKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAbsoluteAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAbsoluteEBooleanParserRuleCall_2_1_0 = (RuleCall)cAbsoluteAssignment_2_1.eContents().get(0);
		private final Keyword cStepsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cStepsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cStepsGenericStepParserRuleCall_5_0 = (RuleCall)cStepsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cStepsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cStepsGenericStepParserRuleCall_6_1_0 = (RuleCall)cStepsAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Path:
		//	"Path" "{" ("absolute" absolute=EBoolean)? "steps" "{" steps+=GenericStep ("," steps+=GenericStep)* "}" "}";
		public ParserRule getRule() { return rule; }

		//"Path" "{" ("absolute" absolute=EBoolean)? "steps" "{" steps+=GenericStep ("," steps+=GenericStep)* "}" "}"
		public Group getGroup() { return cGroup; }

		//"Path"
		public Keyword getPathKeyword_0() { return cPathKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("absolute" absolute=EBoolean)?
		public Group getGroup_2() { return cGroup_2; }

		//"absolute"
		public Keyword getAbsoluteKeyword_2_0() { return cAbsoluteKeyword_2_0; }

		//absolute=EBoolean
		public Assignment getAbsoluteAssignment_2_1() { return cAbsoluteAssignment_2_1; }

		//EBoolean
		public RuleCall getAbsoluteEBooleanParserRuleCall_2_1_0() { return cAbsoluteEBooleanParserRuleCall_2_1_0; }

		//"steps"
		public Keyword getStepsKeyword_3() { return cStepsKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//steps+=GenericStep
		public Assignment getStepsAssignment_5() { return cStepsAssignment_5; }

		//GenericStep
		public RuleCall getStepsGenericStepParserRuleCall_5_0() { return cStepsGenericStepParserRuleCall_5_0; }

		//("," steps+=GenericStep)*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//steps+=GenericStep
		public Assignment getStepsAssignment_6_1() { return cStepsAssignment_6_1; }

		//GenericStep
		public RuleCall getStepsGenericStepParserRuleCall_6_1_0() { return cStepsGenericStepParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//	"true" | "false";
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class ConcreteStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConcreteStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConcreteStepKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cValueKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ConcreteStep:
		//	"ConcreteStep" "{" "value" value=EString "}";
		public ParserRule getRule() { return rule; }

		//"ConcreteStep" "{" "value" value=EString "}"
		public Group getGroup() { return cGroup; }

		//"ConcreteStep"
		public Keyword getConcreteStepKeyword_0() { return cConcreteStepKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"value"
		public Keyword getValueKeyword_2() { return cValueKeyword_2; }

		//value=EString
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//EString
		public RuleCall getValueEStringParserRuleCall_3_0() { return cValueEStringParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class VariableStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VariableStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVariableStepKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cValueKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cValuePathVariableCrossReference_3_0 = (CrossReference)cValueAssignment_3.eContents().get(0);
		private final RuleCall cValuePathVariableEStringParserRuleCall_3_0_1 = (RuleCall)cValuePathVariableCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//VariableStep:
		//	"VariableStep" "{" "value" value=[PathVariable|EString] "}";
		public ParserRule getRule() { return rule; }

		//"VariableStep" "{" "value" value=[PathVariable|EString] "}"
		public Group getGroup() { return cGroup; }

		//"VariableStep"
		public Keyword getVariableStepKeyword_0() { return cVariableStepKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"value"
		public Keyword getValueKeyword_2() { return cValueKeyword_2; }

		//value=[PathVariable|EString]
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//[PathVariable|EString]
		public CrossReference getValuePathVariableCrossReference_3_0() { return cValuePathVariableCrossReference_3_0; }

		//EString
		public RuleCall getValuePathVariableEStringParserRuleCall_3_0_1() { return cValuePathVariableEStringParserRuleCall_3_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ParametrizedStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParametrizedStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParametrizedStepAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParametrizedStepKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//ParametrizedStep:
		//	{ParametrizedStep} "ParametrizedStep" name=EString;
		public ParserRule getRule() { return rule; }

		//{ParametrizedStep} "ParametrizedStep" name=EString
		public Group getGroup() { return cGroup; }

		//{ParametrizedStep}
		public Action getParametrizedStepAction_0() { return cParametrizedStepAction_0; }

		//"ParametrizedStep"
		public Keyword getParametrizedStepKeyword_1() { return cParametrizedStepKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}

	public class SelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Selection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSelectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cWhereKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cWhereAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cWhereFilterComponentParserRuleCall_2_2_0 = (RuleCall)cWhereAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cWhereAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cWhereFilterComponentParserRuleCall_2_3_1_0 = (RuleCall)cWhereAssignment_2_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFromAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFromPathParserRuleCall_4_0 = (RuleCall)cFromAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Selection:
		//	"Selection" "{" ("where" "{" where+=FilterComponent ("," where+=FilterComponent)* "}")? "from" from=Path "}";
		public ParserRule getRule() { return rule; }

		//"Selection" "{" ("where" "{" where+=FilterComponent ("," where+=FilterComponent)* "}")? "from" from=Path "}"
		public Group getGroup() { return cGroup; }

		//"Selection"
		public Keyword getSelectionKeyword_0() { return cSelectionKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("where" "{" where+=FilterComponent ("," where+=FilterComponent)* "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"where"
		public Keyword getWhereKeyword_2_0() { return cWhereKeyword_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }

		//where+=FilterComponent
		public Assignment getWhereAssignment_2_2() { return cWhereAssignment_2_2; }

		//FilterComponent
		public RuleCall getWhereFilterComponentParserRuleCall_2_2_0() { return cWhereFilterComponentParserRuleCall_2_2_0; }

		//("," where+=FilterComponent)*
		public Group getGroup_2_3() { return cGroup_2_3; }

		//","
		public Keyword getCommaKeyword_2_3_0() { return cCommaKeyword_2_3_0; }

		//where+=FilterComponent
		public Assignment getWhereAssignment_2_3_1() { return cWhereAssignment_2_3_1; }

		//FilterComponent
		public RuleCall getWhereFilterComponentParserRuleCall_2_3_1_0() { return cWhereFilterComponentParserRuleCall_2_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }

		//"from"
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }

		//from=Path
		public Assignment getFromAssignment_4() { return cFromAssignment_4; }

		//Path
		public RuleCall getFromPathParserRuleCall_4_0() { return cFromPathParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class FilterComponent_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilterComponent_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFilterComponentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFilterComponentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//FilterComponent_Impl returns FilterComponent:
		//	{FilterComponent} "FilterComponent";
		public ParserRule getRule() { return rule; }

		//{FilterComponent} "FilterComponent"
		public Group getGroup() { return cGroup; }

		//{FilterComponent}
		public Action getFilterComponentAction_0() { return cFilterComponentAction_0; }

		//"FilterComponent"
		public Keyword getFilterComponentKeyword_1() { return cFilterComponentKeyword_1; }
	}

	public class FilterLeaf_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilterLeaf_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFilterLeafAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFilterLeafKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTrueFalseSearchKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTrueFalseSearchAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTrueFalseSearchEBooleanParserRuleCall_3_1_0 = (RuleCall)cTrueFalseSearchAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FilterLeaf_Impl returns FilterLeaf:
		//	{FilterLeaf} "FilterLeaf" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}";
		public ParserRule getRule() { return rule; }

		//{FilterLeaf} "FilterLeaf" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}"
		public Group getGroup() { return cGroup; }

		//{FilterLeaf}
		public Action getFilterLeafAction_0() { return cFilterLeafAction_0; }

		//"FilterLeaf"
		public Keyword getFilterLeafKeyword_1() { return cFilterLeafKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("trueFalseSearch" trueFalseSearch=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }

		//"trueFalseSearch"
		public Keyword getTrueFalseSearchKeyword_3_0() { return cTrueFalseSearchKeyword_3_0; }

		//trueFalseSearch=EBoolean
		public Assignment getTrueFalseSearchAssignment_3_1() { return cTrueFalseSearchAssignment_3_1; }

		//EBoolean
		public RuleCall getTrueFalseSearchEBooleanParserRuleCall_3_1_0() { return cTrueFalseSearchEBooleanParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class OnNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OnName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOnNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOnNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTrueFalseSearchKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTrueFalseSearchAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTrueFalseSearchEBooleanParserRuleCall_4_1_0 = (RuleCall)cTrueFalseSearchAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OnName:
		//	{OnName} "OnName" name=EString "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}";
		public ParserRule getRule() { return rule; }

		//{OnName} "OnName" name=EString "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}"
		public Group getGroup() { return cGroup; }

		//{OnName}
		public Action getOnNameAction_0() { return cOnNameAction_0; }

		//"OnName"
		public Keyword getOnNameKeyword_1() { return cOnNameKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("trueFalseSearch" trueFalseSearch=EBoolean)?
		public Group getGroup_4() { return cGroup_4; }

		//"trueFalseSearch"
		public Keyword getTrueFalseSearchKeyword_4_0() { return cTrueFalseSearchKeyword_4_0; }

		//trueFalseSearch=EBoolean
		public Assignment getTrueFalseSearchAssignment_4_1() { return cTrueFalseSearchAssignment_4_1; }

		//EBoolean
		public RuleCall getTrueFalseSearchEBooleanParserRuleCall_4_1_0() { return cTrueFalseSearchEBooleanParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class OnExtensionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OnExtension");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOnExtensionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOnExtensionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTrueFalseSearchKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTrueFalseSearchAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTrueFalseSearchEBooleanParserRuleCall_3_1_0 = (RuleCall)cTrueFalseSearchAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtensionsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cExtensionsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cExtensionsEStringParserRuleCall_4_2_0 = (RuleCall)cExtensionsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cExtensionsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cExtensionsEStringParserRuleCall_4_3_1_0 = (RuleCall)cExtensionsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OnExtension:
		//	{OnExtension} "OnExtension" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? ("extensions" "{" extensions+=EString
		//	("," extensions+=EString)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{OnExtension} "OnExtension" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? ("extensions" "{" extensions+=EString (","
		//extensions+=EString)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{OnExtension}
		public Action getOnExtensionAction_0() { return cOnExtensionAction_0; }

		//"OnExtension"
		public Keyword getOnExtensionKeyword_1() { return cOnExtensionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("trueFalseSearch" trueFalseSearch=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }

		//"trueFalseSearch"
		public Keyword getTrueFalseSearchKeyword_3_0() { return cTrueFalseSearchKeyword_3_0; }

		//trueFalseSearch=EBoolean
		public Assignment getTrueFalseSearchAssignment_3_1() { return cTrueFalseSearchAssignment_3_1; }

		//EBoolean
		public RuleCall getTrueFalseSearchEBooleanParserRuleCall_3_1_0() { return cTrueFalseSearchEBooleanParserRuleCall_3_1_0; }

		//("extensions" "{" extensions+=EString ("," extensions+=EString)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"extensions"
		public Keyword getExtensionsKeyword_4_0() { return cExtensionsKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//extensions+=EString
		public Assignment getExtensionsAssignment_4_2() { return cExtensionsAssignment_4_2; }

		//EString
		public RuleCall getExtensionsEStringParserRuleCall_4_2_0() { return cExtensionsEStringParserRuleCall_4_2_0; }

		//("," extensions+=EString)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//extensions+=EString
		public Assignment getExtensionsAssignment_4_3_1() { return cExtensionsAssignment_4_3_1; }

		//EString
		public RuleCall getExtensionsEStringParserRuleCall_4_3_1_0() { return cExtensionsEStringParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class OnMeasure_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OnMeasure_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOnMeasureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTrueFalseSearchKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTrueFalseSearchAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTrueFalseSearchEBooleanParserRuleCall_2_1_0 = (RuleCall)cTrueFalseSearchAssignment_2_1.eContents().get(0);
		private final Keyword cOperatorKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOperatorAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOperatorOperatorEnumRuleCall_4_0 = (RuleCall)cOperatorAssignment_4.eContents().get(0);
		private final Keyword cTresholdKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTresholdAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTresholdEIntParserRuleCall_6_0 = (RuleCall)cTresholdAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//OnMeasure_Impl returns OnMeasure:
		//	"OnMeasure" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "operator" operator=Operator "treshold" treshold=EInt
		//	"}";
		public ParserRule getRule() { return rule; }

		//"OnMeasure" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "operator" operator=Operator "treshold" treshold=EInt "}"
		public Group getGroup() { return cGroup; }

		//"OnMeasure"
		public Keyword getOnMeasureKeyword_0() { return cOnMeasureKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("trueFalseSearch" trueFalseSearch=EBoolean)?
		public Group getGroup_2() { return cGroup_2; }

		//"trueFalseSearch"
		public Keyword getTrueFalseSearchKeyword_2_0() { return cTrueFalseSearchKeyword_2_0; }

		//trueFalseSearch=EBoolean
		public Assignment getTrueFalseSearchAssignment_2_1() { return cTrueFalseSearchAssignment_2_1; }

		//EBoolean
		public RuleCall getTrueFalseSearchEBooleanParserRuleCall_2_1_0() { return cTrueFalseSearchEBooleanParserRuleCall_2_1_0; }

		//"operator"
		public Keyword getOperatorKeyword_3() { return cOperatorKeyword_3; }

		//operator=Operator
		public Assignment getOperatorAssignment_4() { return cOperatorAssignment_4; }

		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_4_0() { return cOperatorOperatorEnumRuleCall_4_0; }

		//"treshold"
		public Keyword getTresholdKeyword_5() { return cTresholdKeyword_5; }

		//treshold=EInt
		public Assignment getTresholdAssignment_6() { return cTresholdAssignment_6; }

		//EInt
		public RuleCall getTresholdEIntParserRuleCall_6_0() { return cTresholdEIntParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class OnTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OnTime");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOnTimeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTrueFalseSearchKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTrueFalseSearchAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTrueFalseSearchEBooleanParserRuleCall_2_1_0 = (RuleCall)cTrueFalseSearchAssignment_2_1.eContents().get(0);
		private final Keyword cOperatorKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOperatorAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOperatorOperatorEnumRuleCall_4_0 = (RuleCall)cOperatorAssignment_4.eContents().get(0);
		private final Keyword cTresholdKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTresholdAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTresholdEIntParserRuleCall_6_0 = (RuleCall)cTresholdAssignment_6.eContents().get(0);
		private final Keyword cUnitKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cUnitAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cUnitTimeUnitEnumRuleCall_8_0 = (RuleCall)cUnitAssignment_8.eContents().get(0);
		private final Keyword cTimeOfKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cTimeOfAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cTimeOfTimeTypeEnumRuleCall_10_0 = (RuleCall)cTimeOfAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//OnTime:
		//	"OnTime" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "operator" operator=Operator "treshold" treshold=EInt
		//	"unit" unit=TimeUnit "timeOf" timeOf=TimeType "}";
		public ParserRule getRule() { return rule; }

		//"OnTime" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "operator" operator=Operator "treshold" treshold=EInt "unit"
		//unit=TimeUnit "timeOf" timeOf=TimeType "}"
		public Group getGroup() { return cGroup; }

		//"OnTime"
		public Keyword getOnTimeKeyword_0() { return cOnTimeKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("trueFalseSearch" trueFalseSearch=EBoolean)?
		public Group getGroup_2() { return cGroup_2; }

		//"trueFalseSearch"
		public Keyword getTrueFalseSearchKeyword_2_0() { return cTrueFalseSearchKeyword_2_0; }

		//trueFalseSearch=EBoolean
		public Assignment getTrueFalseSearchAssignment_2_1() { return cTrueFalseSearchAssignment_2_1; }

		//EBoolean
		public RuleCall getTrueFalseSearchEBooleanParserRuleCall_2_1_0() { return cTrueFalseSearchEBooleanParserRuleCall_2_1_0; }

		//"operator"
		public Keyword getOperatorKeyword_3() { return cOperatorKeyword_3; }

		//operator=Operator
		public Assignment getOperatorAssignment_4() { return cOperatorAssignment_4; }

		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_4_0() { return cOperatorOperatorEnumRuleCall_4_0; }

		//"treshold"
		public Keyword getTresholdKeyword_5() { return cTresholdKeyword_5; }

		//treshold=EInt
		public Assignment getTresholdAssignment_6() { return cTresholdAssignment_6; }

		//EInt
		public RuleCall getTresholdEIntParserRuleCall_6_0() { return cTresholdEIntParserRuleCall_6_0; }

		//"unit"
		public Keyword getUnitKeyword_7() { return cUnitKeyword_7; }

		//unit=TimeUnit
		public Assignment getUnitAssignment_8() { return cUnitAssignment_8; }

		//TimeUnit
		public RuleCall getUnitTimeUnitEnumRuleCall_8_0() { return cUnitTimeUnitEnumRuleCall_8_0; }

		//"timeOf"
		public Keyword getTimeOfKeyword_9() { return cTimeOfKeyword_9; }

		//timeOf=TimeType
		public Assignment getTimeOfAssignment_10() { return cTimeOfAssignment_10; }

		//TimeType
		public RuleCall getTimeOfTimeTypeEnumRuleCall_10_0() { return cTimeOfTimeTypeEnumRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class OnAttributesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OnAttributes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOnAttributesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTrueFalseSearchKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTrueFalseSearchAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTrueFalseSearchEBooleanParserRuleCall_3_1_0 = (RuleCall)cTrueFalseSearchAssignment_3_1.eContents().get(0);
		private final Keyword cValueKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueEStringParserRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//OnAttributes:
		//	"OnAttributes" name=EString "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "value" value=EString "}";
		public ParserRule getRule() { return rule; }

		//"OnAttributes" name=EString "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "value" value=EString "}"
		public Group getGroup() { return cGroup; }

		//"OnAttributes"
		public Keyword getOnAttributesKeyword_0() { return cOnAttributesKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("trueFalseSearch" trueFalseSearch=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }

		//"trueFalseSearch"
		public Keyword getTrueFalseSearchKeyword_3_0() { return cTrueFalseSearchKeyword_3_0; }

		//trueFalseSearch=EBoolean
		public Assignment getTrueFalseSearchAssignment_3_1() { return cTrueFalseSearchAssignment_3_1; }

		//EBoolean
		public RuleCall getTrueFalseSearchEBooleanParserRuleCall_3_1_0() { return cTrueFalseSearchEBooleanParserRuleCall_3_1_0; }

		//"value"
		public Keyword getValueKeyword_4() { return cValueKeyword_4; }

		//value=EString
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }

		//EString
		public RuleCall getValueEStringParserRuleCall_5_0() { return cValueEStringParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class OnTagsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OnTags");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOnlyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOnlyOnlyKeyword_0_0 = (Keyword)cOnlyAssignment_0.eContents().get(0);
		private final Keyword cOnTagsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTrueFalseSearchKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTrueFalseSearchAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTrueFalseSearchEBooleanParserRuleCall_3_1_0 = (RuleCall)cTrueFalseSearchAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTagsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTagsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cTagsEStringParserRuleCall_4_2_0 = (RuleCall)cTagsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cTagsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cTagsEStringParserRuleCall_4_3_1_0 = (RuleCall)cTagsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cTresholdKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTresholdAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTresholdEIntParserRuleCall_6_0 = (RuleCall)cTresholdAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//OnTags:
		//	only?="only"? "OnTags" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? ("tags" "{" tags+=EString (","
		//	tags+=EString)* "}")? "treshold" treshold=EInt "}";
		public ParserRule getRule() { return rule; }

		//only?="only"? "OnTags" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? ("tags" "{" tags+=EString ("," tags+=EString)*
		//"}")? "treshold" treshold=EInt "}"
		public Group getGroup() { return cGroup; }

		//only?="only"?
		public Assignment getOnlyAssignment_0() { return cOnlyAssignment_0; }

		//"only"
		public Keyword getOnlyOnlyKeyword_0_0() { return cOnlyOnlyKeyword_0_0; }

		//"OnTags"
		public Keyword getOnTagsKeyword_1() { return cOnTagsKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("trueFalseSearch" trueFalseSearch=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }

		//"trueFalseSearch"
		public Keyword getTrueFalseSearchKeyword_3_0() { return cTrueFalseSearchKeyword_3_0; }

		//trueFalseSearch=EBoolean
		public Assignment getTrueFalseSearchAssignment_3_1() { return cTrueFalseSearchAssignment_3_1; }

		//EBoolean
		public RuleCall getTrueFalseSearchEBooleanParserRuleCall_3_1_0() { return cTrueFalseSearchEBooleanParserRuleCall_3_1_0; }

		//("tags" "{" tags+=EString ("," tags+=EString)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"tags"
		public Keyword getTagsKeyword_4_0() { return cTagsKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//tags+=EString
		public Assignment getTagsAssignment_4_2() { return cTagsAssignment_4_2; }

		//EString
		public RuleCall getTagsEStringParserRuleCall_4_2_0() { return cTagsEStringParserRuleCall_4_2_0; }

		//("," tags+=EString)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//tags+=EString
		public Assignment getTagsAssignment_4_3_1() { return cTagsAssignment_4_3_1; }

		//EString
		public RuleCall getTagsEStringParserRuleCall_4_3_1_0() { return cTagsEStringParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//"treshold"
		public Keyword getTresholdKeyword_5() { return cTresholdKeyword_5; }

		//treshold=EInt
		public Assignment getTresholdAssignment_6() { return cTresholdAssignment_6; }

		//EInt
		public RuleCall getTresholdEIntParserRuleCall_6_0() { return cTresholdEIntParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class OnSizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OnSize");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOnSizeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTrueFalseSearchKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTrueFalseSearchAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTrueFalseSearchEBooleanParserRuleCall_2_1_0 = (RuleCall)cTrueFalseSearchAssignment_2_1.eContents().get(0);
		private final Keyword cOperatorKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOperatorAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOperatorOperatorEnumRuleCall_4_0 = (RuleCall)cOperatorAssignment_4.eContents().get(0);
		private final Keyword cTresholdKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTresholdAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTresholdEIntParserRuleCall_6_0 = (RuleCall)cTresholdAssignment_6.eContents().get(0);
		private final Keyword cUnitKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cUnitAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cUnitMemoryUnitEnumRuleCall_8_0 = (RuleCall)cUnitAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//OnSize:
		//	"OnSize" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "operator" operator=Operator "treshold" treshold=EInt
		//	"unit" unit=MemoryUnit "}";
		public ParserRule getRule() { return rule; }

		//"OnSize" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "operator" operator=Operator "treshold" treshold=EInt "unit"
		//unit=MemoryUnit "}"
		public Group getGroup() { return cGroup; }

		//"OnSize"
		public Keyword getOnSizeKeyword_0() { return cOnSizeKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("trueFalseSearch" trueFalseSearch=EBoolean)?
		public Group getGroup_2() { return cGroup_2; }

		//"trueFalseSearch"
		public Keyword getTrueFalseSearchKeyword_2_0() { return cTrueFalseSearchKeyword_2_0; }

		//trueFalseSearch=EBoolean
		public Assignment getTrueFalseSearchAssignment_2_1() { return cTrueFalseSearchAssignment_2_1; }

		//EBoolean
		public RuleCall getTrueFalseSearchEBooleanParserRuleCall_2_1_0() { return cTrueFalseSearchEBooleanParserRuleCall_2_1_0; }

		//"operator"
		public Keyword getOperatorKeyword_3() { return cOperatorKeyword_3; }

		//operator=Operator
		public Assignment getOperatorAssignment_4() { return cOperatorAssignment_4; }

		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_4_0() { return cOperatorOperatorEnumRuleCall_4_0; }

		//"treshold"
		public Keyword getTresholdKeyword_5() { return cTresholdKeyword_5; }

		//treshold=EInt
		public Assignment getTresholdAssignment_6() { return cTresholdAssignment_6; }

		//EInt
		public RuleCall getTresholdEIntParserRuleCall_6_0() { return cTresholdEIntParserRuleCall_6_0; }

		//"unit"
		public Keyword getUnitKeyword_7() { return cUnitKeyword_7; }

		//unit=MemoryUnit
		public Assignment getUnitAssignment_8() { return cUnitAssignment_8; }

		//MemoryUnit
		public RuleCall getUnitMemoryUnitEnumRuleCall_8_0() { return cUnitMemoryUnitEnumRuleCall_8_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class OnBasic_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OnBasic_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOnBasicAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOnBasicKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTrueFalseSearchKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTrueFalseSearchAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTrueFalseSearchEBooleanParserRuleCall_3_1_0 = (RuleCall)cTrueFalseSearchAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//OnBasic_Impl returns OnBasic:
		//	{OnBasic} "OnBasic" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}";
		public ParserRule getRule() { return rule; }

		//{OnBasic} "OnBasic" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}"
		public Group getGroup() { return cGroup; }

		//{OnBasic}
		public Action getOnBasicAction_0() { return cOnBasicAction_0; }

		//"OnBasic"
		public Keyword getOnBasicKeyword_1() { return cOnBasicKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("trueFalseSearch" trueFalseSearch=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }

		//"trueFalseSearch"
		public Keyword getTrueFalseSearchKeyword_3_0() { return cTrueFalseSearchKeyword_3_0; }

		//trueFalseSearch=EBoolean
		public Assignment getTrueFalseSearchAssignment_3_1() { return cTrueFalseSearchAssignment_3_1; }

		//EBoolean
		public RuleCall getTrueFalseSearchEBooleanParserRuleCall_3_1_0() { return cTrueFalseSearchEBooleanParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class OnCustom_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OnCustom_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOnCustomAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOnCustomKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTrueFalseSearchKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTrueFalseSearchAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTrueFalseSearchEBooleanParserRuleCall_3_1_0 = (RuleCall)cTrueFalseSearchAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//OnCustom_Impl returns OnCustom:
		//	{OnCustom} "OnCustom" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}";
		public ParserRule getRule() { return rule; }

		//{OnCustom} "OnCustom" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}"
		public Group getGroup() { return cGroup; }

		//{OnCustom}
		public Action getOnCustomAction_0() { return cOnCustomAction_0; }

		//"OnCustom"
		public Keyword getOnCustomKeyword_1() { return cOnCustomKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("trueFalseSearch" trueFalseSearch=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }

		//"trueFalseSearch"
		public Keyword getTrueFalseSearchKeyword_3_0() { return cTrueFalseSearchKeyword_3_0; }

		//trueFalseSearch=EBoolean
		public Assignment getTrueFalseSearchAssignment_3_1() { return cTrueFalseSearchAssignment_3_1; }

		//EBoolean
		public RuleCall getTrueFalseSearchEBooleanParserRuleCall_3_1_0() { return cTrueFalseSearchEBooleanParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class FilterContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilterContainer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFilterContainerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCompositionTypeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCompositionTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCompositionTypeCompositionTypeEnumRuleCall_2_1_0 = (RuleCall)cCompositionTypeAssignment_2_1.eContents().get(0);
		private final Keyword cSegmentsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSegmentsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSegmentsFilterComponentParserRuleCall_5_0 = (RuleCall)cSegmentsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSegmentsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cSegmentsFilterComponentParserRuleCall_6_1_0 = (RuleCall)cSegmentsAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//FilterContainer:
		//	"FilterContainer" "{" ("compositionType" compositionType=CompositionType)? "segments" "{" segments+=FilterComponent
		//	("," segments+=FilterComponent)* "}" "}";
		public ParserRule getRule() { return rule; }

		//"FilterContainer" "{" ("compositionType" compositionType=CompositionType)? "segments" "{" segments+=FilterComponent (","
		//segments+=FilterComponent)* "}" "}"
		public Group getGroup() { return cGroup; }

		//"FilterContainer"
		public Keyword getFilterContainerKeyword_0() { return cFilterContainerKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("compositionType" compositionType=CompositionType)?
		public Group getGroup_2() { return cGroup_2; }

		//"compositionType"
		public Keyword getCompositionTypeKeyword_2_0() { return cCompositionTypeKeyword_2_0; }

		//compositionType=CompositionType
		public Assignment getCompositionTypeAssignment_2_1() { return cCompositionTypeAssignment_2_1; }

		//CompositionType
		public RuleCall getCompositionTypeCompositionTypeEnumRuleCall_2_1_0() { return cCompositionTypeCompositionTypeEnumRuleCall_2_1_0; }

		//"segments"
		public Keyword getSegmentsKeyword_3() { return cSegmentsKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//segments+=FilterComponent
		public Assignment getSegmentsAssignment_5() { return cSegmentsAssignment_5; }

		//FilterComponent
		public RuleCall getSegmentsFilterComponentParserRuleCall_5_0() { return cSegmentsFilterComponentParserRuleCall_5_0; }

		//("," segments+=FilterComponent)*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//segments+=FilterComponent
		public Assignment getSegmentsAssignment_6_1() { return cSegmentsAssignment_6_1; }

		//FilterComponent
		public RuleCall getSegmentsFilterComponentParserRuleCall_6_1_0() { return cSegmentsFilterComponentParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class IsEmptyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IsEmpty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIsEmptyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIsEmptyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTrueFalseSearchKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTrueFalseSearchAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTrueFalseSearchEBooleanParserRuleCall_3_1_0 = (RuleCall)cTrueFalseSearchAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//IsEmpty:
		//	{IsEmpty} "IsEmpty" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}";
		public ParserRule getRule() { return rule; }

		//{IsEmpty} "IsEmpty" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}"
		public Group getGroup() { return cGroup; }

		//{IsEmpty}
		public Action getIsEmptyAction_0() { return cIsEmptyAction_0; }

		//"IsEmpty"
		public Keyword getIsEmptyKeyword_1() { return cIsEmptyKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("trueFalseSearch" trueFalseSearch=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }

		//"trueFalseSearch"
		public Keyword getTrueFalseSearchKeyword_3_0() { return cTrueFalseSearchKeyword_3_0; }

		//trueFalseSearch=EBoolean
		public Assignment getTrueFalseSearchAssignment_3_1() { return cTrueFalseSearchAssignment_3_1; }

		//EBoolean
		public RuleCall getTrueFalseSearchEBooleanParserRuleCall_3_1_0() { return cTrueFalseSearchEBooleanParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class OnTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OnType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOnTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTrueFalseSearchKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTrueFalseSearchAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTrueFalseSearchEBooleanParserRuleCall_2_1_0 = (RuleCall)cTrueFalseSearchAssignment_2_1.eContents().get(0);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeFileTypeEnumRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OnType:
		//	"OnType" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "type" type=FileType "}";
		public ParserRule getRule() { return rule; }

		//"OnType" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "type" type=FileType "}"
		public Group getGroup() { return cGroup; }

		//"OnType"
		public Keyword getOnTypeKeyword_0() { return cOnTypeKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("trueFalseSearch" trueFalseSearch=EBoolean)?
		public Group getGroup_2() { return cGroup_2; }

		//"trueFalseSearch"
		public Keyword getTrueFalseSearchKeyword_2_0() { return cTrueFalseSearchKeyword_2_0; }

		//trueFalseSearch=EBoolean
		public Assignment getTrueFalseSearchAssignment_2_1() { return cTrueFalseSearchAssignment_2_1; }

		//EBoolean
		public RuleCall getTrueFalseSearchEBooleanParserRuleCall_2_1_0() { return cTrueFalseSearchEBooleanParserRuleCall_2_1_0; }

		//"type"
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }

		//type=FileType
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//FileType
		public RuleCall getTypeFileTypeEnumRuleCall_4_0() { return cTypeFileTypeEnumRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//	"-"? INT;
		public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class Creating_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Creating_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCreatingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cStrategyKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cStrategyAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cStrategyStrategiesEnumRuleCall_2_1_0 = (RuleCall)cStrategyAssignment_2_1.eContents().get(0);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSourceSelectionVariableCrossReference_4_0 = (CrossReference)cSourceAssignment_4.eContents().get(0);
		private final RuleCall cSourceSelectionVariableEStringParserRuleCall_4_0_1 = (RuleCall)cSourceSelectionVariableCrossReference_4_0.eContents().get(1);
		private final Keyword cDestinationKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDestinationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDestinationPathParserRuleCall_6_0 = (RuleCall)cDestinationAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Creating_Impl returns Creating:
		//	"Creating" "{" ("strategy" strategy=Strategies)? "source" source=[SelectionVariable|EString] "destination"
		//	destination=Path "}";
		public ParserRule getRule() { return rule; }

		//"Creating" "{" ("strategy" strategy=Strategies)? "source" source=[SelectionVariable|EString] "destination"
		//destination=Path "}"
		public Group getGroup() { return cGroup; }

		//"Creating"
		public Keyword getCreatingKeyword_0() { return cCreatingKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("strategy" strategy=Strategies)?
		public Group getGroup_2() { return cGroup_2; }

		//"strategy"
		public Keyword getStrategyKeyword_2_0() { return cStrategyKeyword_2_0; }

		//strategy=Strategies
		public Assignment getStrategyAssignment_2_1() { return cStrategyAssignment_2_1; }

		//Strategies
		public RuleCall getStrategyStrategiesEnumRuleCall_2_1_0() { return cStrategyStrategiesEnumRuleCall_2_1_0; }

		//"source"
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }

		//source=[SelectionVariable|EString]
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }

		//[SelectionVariable|EString]
		public CrossReference getSourceSelectionVariableCrossReference_4_0() { return cSourceSelectionVariableCrossReference_4_0; }

		//EString
		public RuleCall getSourceSelectionVariableEStringParserRuleCall_4_0_1() { return cSourceSelectionVariableEStringParserRuleCall_4_0_1; }

		//"destination"
		public Keyword getDestinationKeyword_5() { return cDestinationKeyword_5; }

		//destination=Path
		public Assignment getDestinationAssignment_6() { return cDestinationAssignment_6; }

		//Path
		public RuleCall getDestinationPathParserRuleCall_6_0() { return cDestinationPathParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class CopyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Copy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCopyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cStrategyKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cStrategyAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cStrategyStrategiesEnumRuleCall_2_1_0 = (RuleCall)cStrategyAssignment_2_1.eContents().get(0);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSourceSelectionVariableCrossReference_4_0 = (CrossReference)cSourceAssignment_4.eContents().get(0);
		private final RuleCall cSourceSelectionVariableEStringParserRuleCall_4_0_1 = (RuleCall)cSourceSelectionVariableCrossReference_4_0.eContents().get(1);
		private final Keyword cDestinationKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDestinationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDestinationPathParserRuleCall_6_0 = (RuleCall)cDestinationAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Copy:
		//	"Copy" "{" ("strategy" strategy=Strategies)? "source" source=[SelectionVariable|EString] "destination"
		//	destination=Path "}";
		public ParserRule getRule() { return rule; }

		//"Copy" "{" ("strategy" strategy=Strategies)? "source" source=[SelectionVariable|EString] "destination" destination=Path
		//"}"
		public Group getGroup() { return cGroup; }

		//"Copy"
		public Keyword getCopyKeyword_0() { return cCopyKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("strategy" strategy=Strategies)?
		public Group getGroup_2() { return cGroup_2; }

		//"strategy"
		public Keyword getStrategyKeyword_2_0() { return cStrategyKeyword_2_0; }

		//strategy=Strategies
		public Assignment getStrategyAssignment_2_1() { return cStrategyAssignment_2_1; }

		//Strategies
		public RuleCall getStrategyStrategiesEnumRuleCall_2_1_0() { return cStrategyStrategiesEnumRuleCall_2_1_0; }

		//"source"
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }

		//source=[SelectionVariable|EString]
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }

		//[SelectionVariable|EString]
		public CrossReference getSourceSelectionVariableCrossReference_4_0() { return cSourceSelectionVariableCrossReference_4_0; }

		//EString
		public RuleCall getSourceSelectionVariableEStringParserRuleCall_4_0_1() { return cSourceSelectionVariableEStringParserRuleCall_4_0_1; }

		//"destination"
		public Keyword getDestinationKeyword_5() { return cDestinationKeyword_5; }

		//destination=Path
		public Assignment getDestinationAssignment_6() { return cDestinationAssignment_6; }

		//Path
		public RuleCall getDestinationPathParserRuleCall_6_0() { return cDestinationPathParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class MoveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Move");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMoveKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cStrategyKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cStrategyAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cStrategyStrategiesEnumRuleCall_2_1_0 = (RuleCall)cStrategyAssignment_2_1.eContents().get(0);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSourceSelectionVariableCrossReference_4_0 = (CrossReference)cSourceAssignment_4.eContents().get(0);
		private final RuleCall cSourceSelectionVariableEStringParserRuleCall_4_0_1 = (RuleCall)cSourceSelectionVariableCrossReference_4_0.eContents().get(1);
		private final Keyword cDestinationKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDestinationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDestinationPathParserRuleCall_6_0 = (RuleCall)cDestinationAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Move:
		//	"Move" "{" ("strategy" strategy=Strategies)? "source" source=[SelectionVariable|EString] "destination"
		//	destination=Path "}";
		public ParserRule getRule() { return rule; }

		//"Move" "{" ("strategy" strategy=Strategies)? "source" source=[SelectionVariable|EString] "destination" destination=Path
		//"}"
		public Group getGroup() { return cGroup; }

		//"Move"
		public Keyword getMoveKeyword_0() { return cMoveKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("strategy" strategy=Strategies)?
		public Group getGroup_2() { return cGroup_2; }

		//"strategy"
		public Keyword getStrategyKeyword_2_0() { return cStrategyKeyword_2_0; }

		//strategy=Strategies
		public Assignment getStrategyAssignment_2_1() { return cStrategyAssignment_2_1; }

		//Strategies
		public RuleCall getStrategyStrategiesEnumRuleCall_2_1_0() { return cStrategyStrategiesEnumRuleCall_2_1_0; }

		//"source"
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }

		//source=[SelectionVariable|EString]
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }

		//[SelectionVariable|EString]
		public CrossReference getSourceSelectionVariableCrossReference_4_0() { return cSourceSelectionVariableCrossReference_4_0; }

		//EString
		public RuleCall getSourceSelectionVariableEStringParserRuleCall_4_0_1() { return cSourceSelectionVariableEStringParserRuleCall_4_0_1; }

		//"destination"
		public Keyword getDestinationKeyword_5() { return cDestinationKeyword_5; }

		//destination=Path
		public Assignment getDestinationAssignment_6() { return cDestinationAssignment_6; }

		//Path
		public RuleCall getDestinationPathParserRuleCall_6_0() { return cDestinationPathParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class DeleteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Delete");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeleteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSourceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSourceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSourceSelectionVariableCrossReference_3_0 = (CrossReference)cSourceAssignment_3.eContents().get(0);
		private final RuleCall cSourceSelectionVariableEStringParserRuleCall_3_0_1 = (RuleCall)cSourceSelectionVariableCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Delete:
		//	"Delete" "{" "source" source=[SelectionVariable|EString] "}";
		public ParserRule getRule() { return rule; }

		//"Delete" "{" "source" source=[SelectionVariable|EString] "}"
		public Group getGroup() { return cGroup; }

		//"Delete"
		public Keyword getDeleteKeyword_0() { return cDeleteKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"source"
		public Keyword getSourceKeyword_2() { return cSourceKeyword_2; }

		//source=[SelectionVariable|EString]
		public Assignment getSourceAssignment_3() { return cSourceAssignment_3; }

		//[SelectionVariable|EString]
		public CrossReference getSourceSelectionVariableCrossReference_3_0() { return cSourceSelectionVariableCrossReference_3_0; }

		//EString
		public RuleCall getSourceSelectionVariableEStringParserRuleCall_3_0_1() { return cSourceSelectionVariableEStringParserRuleCall_3_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	public class OperatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Operator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEqualEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEqualEqualKeyword_0_0 = (Keyword)cEqualEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLessEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLessLessKeyword_1_0 = (Keyword)cLessEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMoreEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMoreMoreKeyword_2_0 = (Keyword)cMoreEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLess_equalEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLess_equalLess_equalKeyword_3_0 = (Keyword)cLess_equalEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cMore_equalEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cMore_equalMore_equalKeyword_4_0 = (Keyword)cMore_equalEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum Operator:
		//	equal | less | more | less_equal | more_equal;
		public EnumRule getRule() { return rule; }

		//equal | less | more | less_equal | more_equal
		public Alternatives getAlternatives() { return cAlternatives; }

		//equal
		public EnumLiteralDeclaration getEqualEnumLiteralDeclaration_0() { return cEqualEnumLiteralDeclaration_0; }

		//"equal"
		public Keyword getEqualEqualKeyword_0_0() { return cEqualEqualKeyword_0_0; }

		//less
		public EnumLiteralDeclaration getLessEnumLiteralDeclaration_1() { return cLessEnumLiteralDeclaration_1; }

		//"less"
		public Keyword getLessLessKeyword_1_0() { return cLessLessKeyword_1_0; }

		//more
		public EnumLiteralDeclaration getMoreEnumLiteralDeclaration_2() { return cMoreEnumLiteralDeclaration_2; }

		//"more"
		public Keyword getMoreMoreKeyword_2_0() { return cMoreMoreKeyword_2_0; }

		//less_equal
		public EnumLiteralDeclaration getLess_equalEnumLiteralDeclaration_3() { return cLess_equalEnumLiteralDeclaration_3; }

		//"less_equal"
		public Keyword getLess_equalLess_equalKeyword_3_0() { return cLess_equalLess_equalKeyword_3_0; }

		//more_equal
		public EnumLiteralDeclaration getMore_equalEnumLiteralDeclaration_4() { return cMore_equalEnumLiteralDeclaration_4; }

		//"more_equal"
		public Keyword getMore_equalMore_equalKeyword_4_0() { return cMore_equalMore_equalKeyword_4_0; }
	}

	public class TimeUnitElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "TimeUnit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMinEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMinMinKeyword_0_0 = (Keyword)cMinEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cHourEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cHourHourKeyword_1_0 = (Keyword)cHourEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDayEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDayDayKeyword_2_0 = (Keyword)cDayEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cWeekEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cWeekWeekKeyword_3_0 = (Keyword)cWeekEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cMonthEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cMonthMonthKeyword_4_0 = (Keyword)cMonthEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cYearEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cYearYearKeyword_5_0 = (Keyword)cYearEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum TimeUnit:
		//	min | hour | day | week | month | year;
		public EnumRule getRule() { return rule; }

		//min | hour | day | week | month | year
		public Alternatives getAlternatives() { return cAlternatives; }

		//min
		public EnumLiteralDeclaration getMinEnumLiteralDeclaration_0() { return cMinEnumLiteralDeclaration_0; }

		//"min"
		public Keyword getMinMinKeyword_0_0() { return cMinMinKeyword_0_0; }

		//hour
		public EnumLiteralDeclaration getHourEnumLiteralDeclaration_1() { return cHourEnumLiteralDeclaration_1; }

		//"hour"
		public Keyword getHourHourKeyword_1_0() { return cHourHourKeyword_1_0; }

		//day
		public EnumLiteralDeclaration getDayEnumLiteralDeclaration_2() { return cDayEnumLiteralDeclaration_2; }

		//"day"
		public Keyword getDayDayKeyword_2_0() { return cDayDayKeyword_2_0; }

		//week
		public EnumLiteralDeclaration getWeekEnumLiteralDeclaration_3() { return cWeekEnumLiteralDeclaration_3; }

		//"week"
		public Keyword getWeekWeekKeyword_3_0() { return cWeekWeekKeyword_3_0; }

		//month
		public EnumLiteralDeclaration getMonthEnumLiteralDeclaration_4() { return cMonthEnumLiteralDeclaration_4; }

		//"month"
		public Keyword getMonthMonthKeyword_4_0() { return cMonthMonthKeyword_4_0; }

		//year
		public EnumLiteralDeclaration getYearEnumLiteralDeclaration_5() { return cYearEnumLiteralDeclaration_5; }

		//"year"
		public Keyword getYearYearKeyword_5_0() { return cYearYearKeyword_5_0; }
	}

	public class TimeTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "TimeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cModificationEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cModificationModificationKeyword_0_0 = (Keyword)cModificationEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCretionEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCretionCretionKeyword_1_0 = (Keyword)cCretionEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum TimeType:
		//	modification | cretion;
		public EnumRule getRule() { return rule; }

		//modification | cretion
		public Alternatives getAlternatives() { return cAlternatives; }

		//modification
		public EnumLiteralDeclaration getModificationEnumLiteralDeclaration_0() { return cModificationEnumLiteralDeclaration_0; }

		//"modification"
		public Keyword getModificationModificationKeyword_0_0() { return cModificationModificationKeyword_0_0; }

		//cretion
		public EnumLiteralDeclaration getCretionEnumLiteralDeclaration_1() { return cCretionEnumLiteralDeclaration_1; }

		//"cretion"
		public Keyword getCretionCretionKeyword_1_0() { return cCretionCretionKeyword_1_0; }
	}

	public class MemoryUnitElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "MemoryUnit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cKBEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cKBKBKeyword_0_0 = (Keyword)cKBEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMBEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMBMBKeyword_1_0 = (Keyword)cMBEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cGBEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cGBGBKeyword_2_0 = (Keyword)cGBEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cTBEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cTBTBKeyword_3_0 = (Keyword)cTBEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum MemoryUnit:
		//	KB | MB | GB | TB;
		public EnumRule getRule() { return rule; }

		//KB | MB | GB | TB
		public Alternatives getAlternatives() { return cAlternatives; }

		//KB
		public EnumLiteralDeclaration getKBEnumLiteralDeclaration_0() { return cKBEnumLiteralDeclaration_0; }

		//"KB"
		public Keyword getKBKBKeyword_0_0() { return cKBKBKeyword_0_0; }

		//MB
		public EnumLiteralDeclaration getMBEnumLiteralDeclaration_1() { return cMBEnumLiteralDeclaration_1; }

		//"MB"
		public Keyword getMBMBKeyword_1_0() { return cMBMBKeyword_1_0; }

		//GB
		public EnumLiteralDeclaration getGBEnumLiteralDeclaration_2() { return cGBEnumLiteralDeclaration_2; }

		//"GB"
		public Keyword getGBGBKeyword_2_0() { return cGBGBKeyword_2_0; }

		//TB
		public EnumLiteralDeclaration getTBEnumLiteralDeclaration_3() { return cTBEnumLiteralDeclaration_3; }

		//"TB"
		public Keyword getTBTBKeyword_3_0() { return cTBTBKeyword_3_0; }
	}

	public class CompositionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "CompositionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAndEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAndAndKeyword_0_0 = (Keyword)cAndEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOrEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOrOrKeyword_1_0 = (Keyword)cOrEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNoneEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNoneNoneKeyword_2_0 = (Keyword)cNoneEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum CompositionType:
		//	and | or | none;
		public EnumRule getRule() { return rule; }

		//and | or | none
		public Alternatives getAlternatives() { return cAlternatives; }

		//and
		public EnumLiteralDeclaration getAndEnumLiteralDeclaration_0() { return cAndEnumLiteralDeclaration_0; }

		//"and"
		public Keyword getAndAndKeyword_0_0() { return cAndAndKeyword_0_0; }

		//or
		public EnumLiteralDeclaration getOrEnumLiteralDeclaration_1() { return cOrEnumLiteralDeclaration_1; }

		//"or"
		public Keyword getOrOrKeyword_1_0() { return cOrOrKeyword_1_0; }

		//none
		public EnumLiteralDeclaration getNoneEnumLiteralDeclaration_2() { return cNoneEnumLiteralDeclaration_2; }

		//"none"
		public Keyword getNoneNoneKeyword_2_0() { return cNoneNoneKeyword_2_0; }
	}

	public class FileTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "FileType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDocumentEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDocumentDocumentKeyword_0_0 = (Keyword)cDocumentEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFolderEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFolderFolderKeyword_1_0 = (Keyword)cFolderEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum FileType:
		//	Document | Folder;
		public EnumRule getRule() { return rule; }

		//Document | Folder
		public Alternatives getAlternatives() { return cAlternatives; }

		//Document
		public EnumLiteralDeclaration getDocumentEnumLiteralDeclaration_0() { return cDocumentEnumLiteralDeclaration_0; }

		//"Document"
		public Keyword getDocumentDocumentKeyword_0_0() { return cDocumentDocumentKeyword_0_0; }

		//Folder
		public EnumLiteralDeclaration getFolderEnumLiteralDeclaration_1() { return cFolderEnumLiteralDeclaration_1; }

		//"Folder"
		public Keyword getFolderFolderKeyword_1_0() { return cFolderFolderKeyword_1_0; }
	}

	public class StrategiesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Strategies");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cForcedEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cForcedForcedKeyword_0_0 = (Keyword)cForcedEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAppendEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAppendAppendKeyword_1_0 = (Keyword)cAppendEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCarefullyEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCarefullyCarefullyKeyword_2_0 = (Keyword)cCarefullyEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Strategies:
		//	forced | append | carefully;
		public EnumRule getRule() { return rule; }

		//forced | append | carefully
		public Alternatives getAlternatives() { return cAlternatives; }

		//forced
		public EnumLiteralDeclaration getForcedEnumLiteralDeclaration_0() { return cForcedEnumLiteralDeclaration_0; }

		//"forced"
		public Keyword getForcedForcedKeyword_0_0() { return cForcedForcedKeyword_0_0; }

		//append
		public EnumLiteralDeclaration getAppendEnumLiteralDeclaration_1() { return cAppendEnumLiteralDeclaration_1; }

		//"append"
		public Keyword getAppendAppendKeyword_1_0() { return cAppendAppendKeyword_1_0; }

		//carefully
		public EnumLiteralDeclaration getCarefullyEnumLiteralDeclaration_2() { return cCarefullyEnumLiteralDeclaration_2; }

		//"carefully"
		public Keyword getCarefullyCarefullyKeyword_2_0() { return cCarefullyCarefullyKeyword_2_0; }
	}
	
	private ModelElements pModel;
	private TransformationElements pTransformation;
	private GenericStepElements pGenericStep;
	private FilterComponentElements pFilterComponent;
	private PathVariableElements pPathVariable;
	private SelectionVariableElements pSelectionVariable;
	private Transformation_ImplElements pTransformation_Impl;
	private PathElements pPath;
	private EStringElements pEString;
	private EBooleanElements pEBoolean;
	private ConcreteStepElements pConcreteStep;
	private VariableStepElements pVariableStep;
	private ParametrizedStepElements pParametrizedStep;
	private SelectionElements pSelection;
	private FilterComponent_ImplElements pFilterComponent_Impl;
	private FilterLeaf_ImplElements pFilterLeaf_Impl;
	private OnNameElements pOnName;
	private OnExtensionElements pOnExtension;
	private OnMeasure_ImplElements pOnMeasure_Impl;
	private OnTimeElements pOnTime;
	private OnAttributesElements pOnAttributes;
	private OnTagsElements pOnTags;
	private OnSizeElements pOnSize;
	private OnBasic_ImplElements pOnBasic_Impl;
	private OnCustom_ImplElements pOnCustom_Impl;
	private FilterContainerElements pFilterContainer;
	private IsEmptyElements pIsEmpty;
	private OnTypeElements pOnType;
	private OperatorElements unknownRuleOperator;
	private EIntElements pEInt;
	private TimeUnitElements unknownRuleTimeUnit;
	private TimeTypeElements unknownRuleTimeType;
	private MemoryUnitElements unknownRuleMemoryUnit;
	private CompositionTypeElements unknownRuleCompositionType;
	private FileTypeElements unknownRuleFileType;
	private Creating_ImplElements pCreating_Impl;
	private CopyElements pCopy;
	private MoveElements pMove;
	private DeleteElements pDelete;
	private StrategiesElements unknownRuleStrategies;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public FilEctlGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.fileEctl.FilEctl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	{Model} "Model" "{" ("path_variables" "{" path_variables+=PathVariable ("," path_variables+=PathVariable)* "}")?
	//	("selection_variables" "{" selection_variables+=SelectionVariable ("," selection_variables+=SelectionVariable)* "}")?
	//	("transformations" "{" transformations+=Transformation ("," transformations+=Transformation)* "}")? "}";
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Transformation:
	//	Transformation_Impl | Creating_Impl | Copy | Move | Delete;
	public TransformationElements getTransformationAccess() {
		return (pTransformation != null) ? pTransformation : (pTransformation = new TransformationElements());
	}
	
	public ParserRule getTransformationRule() {
		return getTransformationAccess().getRule();
	}

	//GenericStep:
	//	ConcreteStep | VariableStep | ParametrizedStep;
	public GenericStepElements getGenericStepAccess() {
		return (pGenericStep != null) ? pGenericStep : (pGenericStep = new GenericStepElements());
	}
	
	public ParserRule getGenericStepRule() {
		return getGenericStepAccess().getRule();
	}

	//FilterComponent:
	//	FilterComponent_Impl | FilterLeaf_Impl | OnName | OnExtension | OnMeasure_Impl | OnTime | OnAttributes | OnTags |
	//	OnSize | OnBasic_Impl | OnCustom_Impl | FilterContainer | IsEmpty | OnType;
	public FilterComponentElements getFilterComponentAccess() {
		return (pFilterComponent != null) ? pFilterComponent : (pFilterComponent = new FilterComponentElements());
	}
	
	public ParserRule getFilterComponentRule() {
		return getFilterComponentAccess().getRule();
	}

	//PathVariable:
	//	"PathVariable" name=EString "{" "value" value=Path "}";
	public PathVariableElements getPathVariableAccess() {
		return (pPathVariable != null) ? pPathVariable : (pPathVariable = new PathVariableElements());
	}
	
	public ParserRule getPathVariableRule() {
		return getPathVariableAccess().getRule();
	}

	//SelectionVariable:
	//	"SelectionVariable" name=EString "{" "value" value=Selection "}";
	public SelectionVariableElements getSelectionVariableAccess() {
		return (pSelectionVariable != null) ? pSelectionVariable : (pSelectionVariable = new SelectionVariableElements());
	}
	
	public ParserRule getSelectionVariableRule() {
		return getSelectionVariableAccess().getRule();
	}

	//Transformation_Impl returns Transformation:
	//	"Transformation" "{" "source" source=[SelectionVariable|EString] "}";
	public Transformation_ImplElements getTransformation_ImplAccess() {
		return (pTransformation_Impl != null) ? pTransformation_Impl : (pTransformation_Impl = new Transformation_ImplElements());
	}
	
	public ParserRule getTransformation_ImplRule() {
		return getTransformation_ImplAccess().getRule();
	}

	//Path:
	//	"Path" "{" ("absolute" absolute=EBoolean)? "steps" "{" steps+=GenericStep ("," steps+=GenericStep)* "}" "}";
	public PathElements getPathAccess() {
		return (pPath != null) ? pPath : (pPath = new PathElements());
	}
	
	public ParserRule getPathRule() {
		return getPathAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//EBoolean returns ecore::EBoolean:
	//	"true" | "false";
	public EBooleanElements getEBooleanAccess() {
		return (pEBoolean != null) ? pEBoolean : (pEBoolean = new EBooleanElements());
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}

	//ConcreteStep:
	//	"ConcreteStep" "{" "value" value=EString "}";
	public ConcreteStepElements getConcreteStepAccess() {
		return (pConcreteStep != null) ? pConcreteStep : (pConcreteStep = new ConcreteStepElements());
	}
	
	public ParserRule getConcreteStepRule() {
		return getConcreteStepAccess().getRule();
	}

	//VariableStep:
	//	"VariableStep" "{" "value" value=[PathVariable|EString] "}";
	public VariableStepElements getVariableStepAccess() {
		return (pVariableStep != null) ? pVariableStep : (pVariableStep = new VariableStepElements());
	}
	
	public ParserRule getVariableStepRule() {
		return getVariableStepAccess().getRule();
	}

	//ParametrizedStep:
	//	{ParametrizedStep} "ParametrizedStep" name=EString;
	public ParametrizedStepElements getParametrizedStepAccess() {
		return (pParametrizedStep != null) ? pParametrizedStep : (pParametrizedStep = new ParametrizedStepElements());
	}
	
	public ParserRule getParametrizedStepRule() {
		return getParametrizedStepAccess().getRule();
	}

	//Selection:
	//	"Selection" "{" ("where" "{" where+=FilterComponent ("," where+=FilterComponent)* "}")? "from" from=Path "}";
	public SelectionElements getSelectionAccess() {
		return (pSelection != null) ? pSelection : (pSelection = new SelectionElements());
	}
	
	public ParserRule getSelectionRule() {
		return getSelectionAccess().getRule();
	}

	//FilterComponent_Impl returns FilterComponent:
	//	{FilterComponent} "FilterComponent";
	public FilterComponent_ImplElements getFilterComponent_ImplAccess() {
		return (pFilterComponent_Impl != null) ? pFilterComponent_Impl : (pFilterComponent_Impl = new FilterComponent_ImplElements());
	}
	
	public ParserRule getFilterComponent_ImplRule() {
		return getFilterComponent_ImplAccess().getRule();
	}

	//FilterLeaf_Impl returns FilterLeaf:
	//	{FilterLeaf} "FilterLeaf" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}";
	public FilterLeaf_ImplElements getFilterLeaf_ImplAccess() {
		return (pFilterLeaf_Impl != null) ? pFilterLeaf_Impl : (pFilterLeaf_Impl = new FilterLeaf_ImplElements());
	}
	
	public ParserRule getFilterLeaf_ImplRule() {
		return getFilterLeaf_ImplAccess().getRule();
	}

	//OnName:
	//	{OnName} "OnName" name=EString "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}";
	public OnNameElements getOnNameAccess() {
		return (pOnName != null) ? pOnName : (pOnName = new OnNameElements());
	}
	
	public ParserRule getOnNameRule() {
		return getOnNameAccess().getRule();
	}

	//OnExtension:
	//	{OnExtension} "OnExtension" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? ("extensions" "{" extensions+=EString
	//	("," extensions+=EString)* "}")? "}";
	public OnExtensionElements getOnExtensionAccess() {
		return (pOnExtension != null) ? pOnExtension : (pOnExtension = new OnExtensionElements());
	}
	
	public ParserRule getOnExtensionRule() {
		return getOnExtensionAccess().getRule();
	}

	//OnMeasure_Impl returns OnMeasure:
	//	"OnMeasure" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "operator" operator=Operator "treshold" treshold=EInt
	//	"}";
	public OnMeasure_ImplElements getOnMeasure_ImplAccess() {
		return (pOnMeasure_Impl != null) ? pOnMeasure_Impl : (pOnMeasure_Impl = new OnMeasure_ImplElements());
	}
	
	public ParserRule getOnMeasure_ImplRule() {
		return getOnMeasure_ImplAccess().getRule();
	}

	//OnTime:
	//	"OnTime" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "operator" operator=Operator "treshold" treshold=EInt
	//	"unit" unit=TimeUnit "timeOf" timeOf=TimeType "}";
	public OnTimeElements getOnTimeAccess() {
		return (pOnTime != null) ? pOnTime : (pOnTime = new OnTimeElements());
	}
	
	public ParserRule getOnTimeRule() {
		return getOnTimeAccess().getRule();
	}

	//OnAttributes:
	//	"OnAttributes" name=EString "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "value" value=EString "}";
	public OnAttributesElements getOnAttributesAccess() {
		return (pOnAttributes != null) ? pOnAttributes : (pOnAttributes = new OnAttributesElements());
	}
	
	public ParserRule getOnAttributesRule() {
		return getOnAttributesAccess().getRule();
	}

	//OnTags:
	//	only?="only"? "OnTags" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? ("tags" "{" tags+=EString (","
	//	tags+=EString)* "}")? "treshold" treshold=EInt "}";
	public OnTagsElements getOnTagsAccess() {
		return (pOnTags != null) ? pOnTags : (pOnTags = new OnTagsElements());
	}
	
	public ParserRule getOnTagsRule() {
		return getOnTagsAccess().getRule();
	}

	//OnSize:
	//	"OnSize" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "operator" operator=Operator "treshold" treshold=EInt
	//	"unit" unit=MemoryUnit "}";
	public OnSizeElements getOnSizeAccess() {
		return (pOnSize != null) ? pOnSize : (pOnSize = new OnSizeElements());
	}
	
	public ParserRule getOnSizeRule() {
		return getOnSizeAccess().getRule();
	}

	//OnBasic_Impl returns OnBasic:
	//	{OnBasic} "OnBasic" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}";
	public OnBasic_ImplElements getOnBasic_ImplAccess() {
		return (pOnBasic_Impl != null) ? pOnBasic_Impl : (pOnBasic_Impl = new OnBasic_ImplElements());
	}
	
	public ParserRule getOnBasic_ImplRule() {
		return getOnBasic_ImplAccess().getRule();
	}

	//OnCustom_Impl returns OnCustom:
	//	{OnCustom} "OnCustom" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}";
	public OnCustom_ImplElements getOnCustom_ImplAccess() {
		return (pOnCustom_Impl != null) ? pOnCustom_Impl : (pOnCustom_Impl = new OnCustom_ImplElements());
	}
	
	public ParserRule getOnCustom_ImplRule() {
		return getOnCustom_ImplAccess().getRule();
	}

	//FilterContainer:
	//	"FilterContainer" "{" ("compositionType" compositionType=CompositionType)? "segments" "{" segments+=FilterComponent
	//	("," segments+=FilterComponent)* "}" "}";
	public FilterContainerElements getFilterContainerAccess() {
		return (pFilterContainer != null) ? pFilterContainer : (pFilterContainer = new FilterContainerElements());
	}
	
	public ParserRule getFilterContainerRule() {
		return getFilterContainerAccess().getRule();
	}

	//IsEmpty:
	//	{IsEmpty} "IsEmpty" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "}";
	public IsEmptyElements getIsEmptyAccess() {
		return (pIsEmpty != null) ? pIsEmpty : (pIsEmpty = new IsEmptyElements());
	}
	
	public ParserRule getIsEmptyRule() {
		return getIsEmptyAccess().getRule();
	}

	//OnType:
	//	"OnType" "{" ("trueFalseSearch" trueFalseSearch=EBoolean)? "type" type=FileType "}";
	public OnTypeElements getOnTypeAccess() {
		return (pOnType != null) ? pOnType : (pOnType = new OnTypeElements());
	}
	
	public ParserRule getOnTypeRule() {
		return getOnTypeAccess().getRule();
	}

	//enum Operator:
	//	equal | less | more | less_equal | more_equal;
	public OperatorElements getOperatorAccess() {
		return (unknownRuleOperator != null) ? unknownRuleOperator : (unknownRuleOperator = new OperatorElements());
	}
	
	public EnumRule getOperatorRule() {
		return getOperatorAccess().getRule();
	}

	//EInt returns ecore::EInt:
	//	"-"? INT;
	public EIntElements getEIntAccess() {
		return (pEInt != null) ? pEInt : (pEInt = new EIntElements());
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}

	//enum TimeUnit:
	//	min | hour | day | week | month | year;
	public TimeUnitElements getTimeUnitAccess() {
		return (unknownRuleTimeUnit != null) ? unknownRuleTimeUnit : (unknownRuleTimeUnit = new TimeUnitElements());
	}
	
	public EnumRule getTimeUnitRule() {
		return getTimeUnitAccess().getRule();
	}

	//enum TimeType:
	//	modification | cretion;
	public TimeTypeElements getTimeTypeAccess() {
		return (unknownRuleTimeType != null) ? unknownRuleTimeType : (unknownRuleTimeType = new TimeTypeElements());
	}
	
	public EnumRule getTimeTypeRule() {
		return getTimeTypeAccess().getRule();
	}

	//enum MemoryUnit:
	//	KB | MB | GB | TB;
	public MemoryUnitElements getMemoryUnitAccess() {
		return (unknownRuleMemoryUnit != null) ? unknownRuleMemoryUnit : (unknownRuleMemoryUnit = new MemoryUnitElements());
	}
	
	public EnumRule getMemoryUnitRule() {
		return getMemoryUnitAccess().getRule();
	}

	//enum CompositionType:
	//	and | or | none;
	public CompositionTypeElements getCompositionTypeAccess() {
		return (unknownRuleCompositionType != null) ? unknownRuleCompositionType : (unknownRuleCompositionType = new CompositionTypeElements());
	}
	
	public EnumRule getCompositionTypeRule() {
		return getCompositionTypeAccess().getRule();
	}

	//enum FileType:
	//	Document | Folder;
	public FileTypeElements getFileTypeAccess() {
		return (unknownRuleFileType != null) ? unknownRuleFileType : (unknownRuleFileType = new FileTypeElements());
	}
	
	public EnumRule getFileTypeRule() {
		return getFileTypeAccess().getRule();
	}

	//Creating_Impl returns Creating:
	//	"Creating" "{" ("strategy" strategy=Strategies)? "source" source=[SelectionVariable|EString] "destination"
	//	destination=Path "}";
	public Creating_ImplElements getCreating_ImplAccess() {
		return (pCreating_Impl != null) ? pCreating_Impl : (pCreating_Impl = new Creating_ImplElements());
	}
	
	public ParserRule getCreating_ImplRule() {
		return getCreating_ImplAccess().getRule();
	}

	//Copy:
	//	"Copy" "{" ("strategy" strategy=Strategies)? "source" source=[SelectionVariable|EString] "destination"
	//	destination=Path "}";
	public CopyElements getCopyAccess() {
		return (pCopy != null) ? pCopy : (pCopy = new CopyElements());
	}
	
	public ParserRule getCopyRule() {
		return getCopyAccess().getRule();
	}

	//Move:
	//	"Move" "{" ("strategy" strategy=Strategies)? "source" source=[SelectionVariable|EString] "destination"
	//	destination=Path "}";
	public MoveElements getMoveAccess() {
		return (pMove != null) ? pMove : (pMove = new MoveElements());
	}
	
	public ParserRule getMoveRule() {
		return getMoveAccess().getRule();
	}

	//Delete:
	//	"Delete" "{" "source" source=[SelectionVariable|EString] "}";
	public DeleteElements getDeleteAccess() {
		return (pDelete != null) ? pDelete : (pDelete = new DeleteElements());
	}
	
	public ParserRule getDeleteRule() {
		return getDeleteAccess().getRule();
	}

	//enum Strategies:
	//	forced | append | carefully;
	public StrategiesElements getStrategiesAccess() {
		return (unknownRuleStrategies != null) ? unknownRuleStrategies : (unknownRuleStrategies = new StrategiesElements());
	}
	
	public EnumRule getStrategiesRule() {
		return getStrategiesAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
