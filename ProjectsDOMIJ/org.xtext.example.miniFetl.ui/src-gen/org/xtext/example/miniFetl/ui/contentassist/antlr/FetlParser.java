/*
* generated by Xtext
*/
package org.xtext.example.miniFetl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.miniFetl.services.FetlGrammarAccess;

public class FetlParser extends AbstractContentAssistParser {
	
	@Inject
	private FetlGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.miniFetl.ui.contentassist.antlr.internal.InternalFetlParser createParser() {
		org.xtext.example.miniFetl.ui.contentassist.antlr.internal.InternalFetlParser result = new org.xtext.example.miniFetl.ui.contentassist.antlr.internal.InternalFetlParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getExecutionAccess().getAlternatives(), "rule__Execution__Alternatives");
					put(grammarAccess.getGenericStepAccess().getAlternatives(), "rule__GenericStep__Alternatives");
					put(grammarAccess.getFilterComponentAccess().getAlternatives(), "rule__FilterComponent__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getStrategiesAccess().getAlternatives(), "rule__Strategies__Alternatives");
					put(grammarAccess.getOperatorAccess().getAlternatives(), "rule__Operator__Alternatives");
					put(grammarAccess.getTimeUnitAccess().getAlternatives(), "rule__TimeUnit__Alternatives");
					put(grammarAccess.getTimeTypeAccess().getAlternatives(), "rule__TimeType__Alternatives");
					put(grammarAccess.getMemoryUnitAccess().getAlternatives(), "rule__MemoryUnit__Alternatives");
					put(grammarAccess.getCompositionTypeAccess().getAlternatives(), "rule__CompositionType__Alternatives");
					put(grammarAccess.getFileTypeAccess().getAlternatives(), "rule__FileType__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getModelAccess().getGroup_2(), "rule__Model__Group_2__0");
					put(grammarAccess.getCopyAccess().getGroup(), "rule__Copy__Group__0");
					put(grammarAccess.getCopyAccess().getGroup_5(), "rule__Copy__Group_5__0");
					put(grammarAccess.getMoveAccess().getGroup(), "rule__Move__Group__0");
					put(grammarAccess.getMoveAccess().getGroup_5(), "rule__Move__Group_5__0");
					put(grammarAccess.getDeleteAccess().getGroup(), "rule__Delete__Group__0");
					put(grammarAccess.getPathVariableAccess().getGroup(), "rule__PathVariable__Group__0");
					put(grammarAccess.getSelectionVariableAccess().getGroup(), "rule__SelectionVariable__Group__0");
					put(grammarAccess.getPathAccess().getGroup(), "rule__Path__Group__0");
					put(grammarAccess.getPathAccess().getGroup_0(), "rule__Path__Group_0__0");
					put(grammarAccess.getPathAccess().getGroup_2(), "rule__Path__Group_2__0");
					put(grammarAccess.getVariableStepAccess().getGroup(), "rule__VariableStep__Group__0");
					put(grammarAccess.getParametrizedStepAccess().getGroup(), "rule__ParametrizedStep__Group__0");
					put(grammarAccess.getSelectionAccess().getGroup(), "rule__Selection__Group__0");
					put(grammarAccess.getSelectionAccess().getGroup_3(), "rule__Selection__Group_3__0");
					put(grammarAccess.getSelectionAccess().getGroup_3_2(), "rule__Selection__Group_3_2__0");
					put(grammarAccess.getOnNameAccess().getGroup(), "rule__OnName__Group__0");
					put(grammarAccess.getOnNameAccess().getGroup_4(), "rule__OnName__Group_4__0");
					put(grammarAccess.getOnExtensionAccess().getGroup(), "rule__OnExtension__Group__0");
					put(grammarAccess.getOnExtensionAccess().getGroup_3(), "rule__OnExtension__Group_3__0");
					put(grammarAccess.getOnExtensionAccess().getGroup_3_1(), "rule__OnExtension__Group_3_1__0");
					put(grammarAccess.getOnExtensionAccess().getGroup_5(), "rule__OnExtension__Group_5__0");
					put(grammarAccess.getOnTimeAccess().getGroup(), "rule__OnTime__Group__0");
					put(grammarAccess.getOnTimeAccess().getGroup_6(), "rule__OnTime__Group_6__0");
					put(grammarAccess.getOnAttributesAccess().getGroup(), "rule__OnAttributes__Group__0");
					put(grammarAccess.getOnAttributesAccess().getGroup_2(), "rule__OnAttributes__Group_2__0");
					put(grammarAccess.getOnAttributesAccess().getGroup_3(), "rule__OnAttributes__Group_3__0");
					put(grammarAccess.getOnTagsAccess().getGroup(), "rule__OnTags__Group__0");
					put(grammarAccess.getOnTagsAccess().getGroup_1(), "rule__OnTags__Group_1__0");
					put(grammarAccess.getOnTagsAccess().getGroup_1_1(), "rule__OnTags__Group_1_1__0");
					put(grammarAccess.getOnTagsAccess().getGroup_6(), "rule__OnTags__Group_6__0");
					put(grammarAccess.getOnSizeAccess().getGroup(), "rule__OnSize__Group__0");
					put(grammarAccess.getOnSizeAccess().getGroup_4(), "rule__OnSize__Group_4__0");
					put(grammarAccess.getFilterContainerAccess().getGroup(), "rule__FilterContainer__Group__0");
					put(grammarAccess.getFilterContainerAccess().getGroup_4(), "rule__FilterContainer__Group_4__0");
					put(grammarAccess.getIsEmptyAccess().getGroup(), "rule__IsEmpty__Group__0");
					put(grammarAccess.getOnTypeAccess().getGroup(), "rule__OnType__Group__0");
					put(grammarAccess.getOnTypeAccess().getGroup_3(), "rule__OnType__Group_3__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getModelAccess().getExecutionsAssignment_1(), "rule__Model__ExecutionsAssignment_1");
					put(grammarAccess.getModelAccess().getExecutionsAssignment_2_1(), "rule__Model__ExecutionsAssignment_2_1");
					put(grammarAccess.getCopyAccess().getSourceAssignment_2(), "rule__Copy__SourceAssignment_2");
					put(grammarAccess.getCopyAccess().getDestinationAssignment_4(), "rule__Copy__DestinationAssignment_4");
					put(grammarAccess.getCopyAccess().getStrategyAssignment_5_1(), "rule__Copy__StrategyAssignment_5_1");
					put(grammarAccess.getMoveAccess().getSourceAssignment_2(), "rule__Move__SourceAssignment_2");
					put(grammarAccess.getMoveAccess().getDestinationAssignment_4(), "rule__Move__DestinationAssignment_4");
					put(grammarAccess.getMoveAccess().getStrategyAssignment_5_1(), "rule__Move__StrategyAssignment_5_1");
					put(grammarAccess.getDeleteAccess().getSourceAssignment_2(), "rule__Delete__SourceAssignment_2");
					put(grammarAccess.getPathVariableAccess().getNameAssignment_0(), "rule__PathVariable__NameAssignment_0");
					put(grammarAccess.getPathVariableAccess().getValueAssignment_2(), "rule__PathVariable__ValueAssignment_2");
					put(grammarAccess.getSelectionVariableAccess().getNameAssignment_1(), "rule__SelectionVariable__NameAssignment_1");
					put(grammarAccess.getSelectionVariableAccess().getValueAssignment_3(), "rule__SelectionVariable__ValueAssignment_3");
					put(grammarAccess.getPathAccess().getAbsoluteAssignment_0_1(), "rule__Path__AbsoluteAssignment_0_1");
					put(grammarAccess.getPathAccess().getStepsAssignment_1(), "rule__Path__StepsAssignment_1");
					put(grammarAccess.getPathAccess().getStepsAssignment_2_1(), "rule__Path__StepsAssignment_2_1");
					put(grammarAccess.getConcreteStepAccess().getValueAssignment(), "rule__ConcreteStep__ValueAssignment");
					put(grammarAccess.getVariableStepAccess().getValueAssignment_1(), "rule__VariableStep__ValueAssignment_1");
					put(grammarAccess.getParametrizedStepAccess().getNameAssignment_2(), "rule__ParametrizedStep__NameAssignment_2");
					put(grammarAccess.getSelectionAccess().getFromAssignment_2(), "rule__Selection__FromAssignment_2");
					put(grammarAccess.getSelectionAccess().getWhereAssignment_3_1(), "rule__Selection__WhereAssignment_3_1");
					put(grammarAccess.getSelectionAccess().getWhereAssignment_3_2_1(), "rule__Selection__WhereAssignment_3_2_1");
					put(grammarAccess.getOnNameAccess().getNameAssignment_3(), "rule__OnName__NameAssignment_3");
					put(grammarAccess.getOnNameAccess().getTrueFalseSearchAssignment_4_1(), "rule__OnName__TrueFalseSearchAssignment_4_1");
					put(grammarAccess.getOnExtensionAccess().getExtensionsAssignment_3_0(), "rule__OnExtension__ExtensionsAssignment_3_0");
					put(grammarAccess.getOnExtensionAccess().getExtensionsAssignment_3_1_1(), "rule__OnExtension__ExtensionsAssignment_3_1_1");
					put(grammarAccess.getOnExtensionAccess().getTrueFalseSearchAssignment_5_1(), "rule__OnExtension__TrueFalseSearchAssignment_5_1");
					put(grammarAccess.getOnTimeAccess().getTimeOfAssignment_2(), "rule__OnTime__TimeOfAssignment_2");
					put(grammarAccess.getOnTimeAccess().getOperatorAssignment_3(), "rule__OnTime__OperatorAssignment_3");
					put(grammarAccess.getOnTimeAccess().getTresholdAssignment_4(), "rule__OnTime__TresholdAssignment_4");
					put(grammarAccess.getOnTimeAccess().getUnitAssignment_5(), "rule__OnTime__UnitAssignment_5");
					put(grammarAccess.getOnTimeAccess().getTrueFalseSearchAssignment_6_1(), "rule__OnTime__TrueFalseSearchAssignment_6_1");
					put(grammarAccess.getOnAttributesAccess().getNameAssignment_1(), "rule__OnAttributes__NameAssignment_1");
					put(grammarAccess.getOnAttributesAccess().getValueAssignment_2_1(), "rule__OnAttributes__ValueAssignment_2_1");
					put(grammarAccess.getOnAttributesAccess().getTrueFalseSearchAssignment_3_1(), "rule__OnAttributes__TrueFalseSearchAssignment_3_1");
					put(grammarAccess.getOnTagsAccess().getTagsAssignment_1_0(), "rule__OnTags__TagsAssignment_1_0");
					put(grammarAccess.getOnTagsAccess().getTagsAssignment_1_1_1(), "rule__OnTags__TagsAssignment_1_1_1");
					put(grammarAccess.getOnTagsAccess().getTresholdAssignment_3(), "rule__OnTags__TresholdAssignment_3");
					put(grammarAccess.getOnTagsAccess().getOnlyAssignment_5(), "rule__OnTags__OnlyAssignment_5");
					put(grammarAccess.getOnTagsAccess().getTrueFalseSearchAssignment_6_1(), "rule__OnTags__TrueFalseSearchAssignment_6_1");
					put(grammarAccess.getOnSizeAccess().getOperatorAssignment_1(), "rule__OnSize__OperatorAssignment_1");
					put(grammarAccess.getOnSizeAccess().getTresholdAssignment_2(), "rule__OnSize__TresholdAssignment_2");
					put(grammarAccess.getOnSizeAccess().getUnitAssignment_3(), "rule__OnSize__UnitAssignment_3");
					put(grammarAccess.getOnSizeAccess().getTrueFalseSearchAssignment_4_1(), "rule__OnSize__TrueFalseSearchAssignment_4_1");
					put(grammarAccess.getFilterContainerAccess().getCompositionTypeAssignment_1(), "rule__FilterContainer__CompositionTypeAssignment_1");
					put(grammarAccess.getFilterContainerAccess().getSegmentsAssignment_3(), "rule__FilterContainer__SegmentsAssignment_3");
					put(grammarAccess.getFilterContainerAccess().getSegmentsAssignment_4_1(), "rule__FilterContainer__SegmentsAssignment_4_1");
					put(grammarAccess.getIsEmptyAccess().getTrueFalseSearchAssignment_3(), "rule__IsEmpty__TrueFalseSearchAssignment_3");
					put(grammarAccess.getOnTypeAccess().getTypeAssignment_2(), "rule__OnType__TypeAssignment_2");
					put(grammarAccess.getOnTypeAccess().getTrueFalseSearchAssignment_3_1(), "rule__OnType__TrueFalseSearchAssignment_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.miniFetl.ui.contentassist.antlr.internal.InternalFetlParser typedParser = (org.xtext.example.miniFetl.ui.contentassist.antlr.internal.InternalFetlParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public FetlGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(FetlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
